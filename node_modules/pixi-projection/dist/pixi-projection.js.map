{"version":3,"file":"pixi-projection.js","sourceRoot":"","sources":["../src/utils.ts","../src/xporter.ts","../src/base/AbstractProjection.ts","../src/base/LinearProjection.ts","../src/base/webgl/Sprite2dRenderer.ts","../src/base/webgl/UniformBatchRenderer.ts","../src/curve/BaseSurface.ts","../src/curve/BilinearSurface.ts","../src/curve/Container2s.ts","../src/curve/ProjectionSurface.ts","../src/curve/SpriteBilinearRenderer.ts","../src/curve/sprites/Sprite2s.ts","../src/curve/sprites/Text2s.ts","../src/curve/sprites/convert.ts","../src/proj2d/Container2d.ts","../src/proj2d/Matrix2d.ts","../src/proj2d/Projection2d.ts","../src/proj2d/mesh/Mesh2d.ts","../src/proj2d/sprites/Sprite2d.ts","../src/proj2d/sprites/Text2d.ts","../src/proj2d/sprites/convert.ts","../src/proj2d/tiling/TilingSprite2d.ts","../src/proj2d/tiling/TilingSprite2dRenderer.ts","../src/proj2d/z_masks/MaskHacker.ts","../src/proj2d/z_masks/SpriteMaskFilter.ts","../src/proj3d/Container3d.ts","../src/proj3d/Camera3d.ts","../src/proj3d/Euler.ts","../src/proj3d/Matrix3d.ts","../src/proj3d/ObservableEuler.ts","../src/proj3d/Point3d.ts","../src/proj3d/Projection3d.ts","../src/proj3d/mesh/Mesh3d2d.ts","../src/proj3d/sprites/Sprite3d.ts","../src/proj3d/sprites/Text3d.ts","../src/proj3d/sprites/convert.ts"],"names":[],"mappings":"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GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAElC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAA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AAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACrD,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAGvD,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YACX,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEpD,EAAE,GAAG,CAAC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AC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACzC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;YAEzB,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GA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","sourcesContent":["namespace pixi_projection.utils {\r\n\timport IPoint = PIXI.IPoint;\r\n\r\n\texport function getIntersectionFactor(p1: IPoint, p2: IPoint, p3: IPoint, p4: IPoint, out: IPoint): number {\r\n\t\tlet A1 = p2.x - p1.x, B1 = p3.x - p4.x, C1 = p3.x - p1.x;\r\n\t\tlet A2 = p2.y - p1.y, B2 = p3.y - p4.y, C2 = p3.y - p1.y;\r\n\t\tlet D = A1 * B2 - A2 * B1;\r\n\t\tif (Math.abs(D) < 1e-7) {\r\n\t\t\tout.x = A1;\r\n\t\t\tout.y = A2;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tlet T = C1 * B2 - C2 * B1;\r\n\t\tlet U = A1 * C2 - A2 * C1;\r\n\r\n\t\tlet t = T / D, u = U / D;\r\n\t\tif (u < (1e-6) || u - 1 > -1e-6) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tout.x = p1.x + t * (p2.x - p1.x);\r\n\t\tout.y = p1.y + t * (p2.y - p1.y);\r\n\r\n\t\treturn 1;\r\n\t}\r\n\r\n\texport function getPositionFromQuad(p: Array<IPoint>, anchor: IPoint, out: IPoint) {\r\n\t\tout = out || new PIXI.Point();\r\n\t\tlet a1 = 1.0 - anchor.x, a2 = 1.0 - a1;\r\n\t\tlet b1 = 1.0 - anchor.y, b2 = 1.0 - b1;\r\n\t\tout.x = (p[0].x * a1 + p[1].x * a2) * b1 + (p[3].x * a1 + p[2].x * a2) * b2;\r\n\t\tout.y = (p[0].y * a1 + p[1].y * a2) * b1 + (p[3].y * a1 + p[2].y * a2) * b2;\r\n\t\treturn out;\r\n\t}\r\n}\r\n","///<reference types=\"pixi.js\"/>\r\n(PIXI as any).projection = pixi_projection;\r\n","declare namespace PIXI {\r\n    export interface Transform {\r\n        proj?: pixi_projection.AbstractProjection;\r\n    }\r\n\r\n    export interface ObservablePoint {\r\n        _x?: number;\r\n        _y?: number;\r\n    }\r\n}\r\n\r\nnamespace pixi_projection {\r\n    export class AbstractProjection {\r\n\r\n        constructor(legacy: PIXI.Transform, enable: boolean = true) {\r\n            this.legacy = legacy;\r\n\r\n            if (enable) {\r\n                this.enabled = true;\r\n            }\r\n\r\n            // sorry for hidden class, it would be good to have special projection field in official pixi\r\n            this.legacy.proj = this;\r\n        }\r\n\r\n        legacy: PIXI.Transform;\r\n\r\n        _enabled: boolean = false;\r\n\r\n        get enabled() {\r\n            return this._enabled;\r\n        }\r\n\r\n        set enabled(value: boolean) {\r\n            this._enabled = value;\r\n        }\r\n\r\n        clear() {\r\n        }\r\n    }\r\n\r\n    export enum TRANSFORM_STEP {\r\n        NONE = 0,\r\n        // POS = 1,\r\n        // ROT = 2,\r\n        // SCALE = 3,\r\n        // PIVOT = 4,\r\n        BEFORE_PROJ = 4,\r\n        PROJ = 5,\r\n        // POS_2 = 6,\r\n        // ROT_2 = 7,\r\n        // SCALE_2 = 8,\r\n        // PIVOT_2 = 9,\r\n        ALL = 9\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n\tfunction transformHack(this: PIXI.Transform, parentTransform: PIXI.Transform) {\r\n\t\t// implementation here\r\n\t\tconst proj = this.proj as LinearProjection<any>;\r\n\t\tconst ta = this as any;\r\n\t\tconst pwid = (parentTransform as any)._worldID;\r\n\r\n\t\tconst lt = ta.localTransform;\r\n\t\tconst scaleAfterAffine = proj.scaleAfterAffine && proj.affine >= 2;\r\n\r\n\t\t//this part is copied from\r\n\t\tif (ta._localID !== ta._currentLocalID) {\r\n\t\t\t// get the matrix values of the displayobject based on its transform properties..\r\n\t\t\tif (scaleAfterAffine) {\r\n\t\t\t\tlt.a = ta._cx;\r\n\t\t\t\tlt.b = ta._sx;\r\n\t\t\t\tlt.c = ta._cy;\r\n\t\t\t\tlt.d = ta._sy;\r\n\r\n\t\t\t\tlt.tx = ta.position._x;\r\n\t\t\t\tlt.ty = ta.position._y;\r\n\t\t\t} else {\r\n\t\t\t\tlt.a = ta._cx * ta.scale._x;\r\n\t\t\t\tlt.b = ta._sx * ta.scale._x;\r\n\t\t\t\tlt.c = ta._cy * ta.scale._y;\r\n\t\t\t\tlt.d = ta._sy * ta.scale._y;\r\n\r\n\t\t\t\tlt.tx = ta.position._x - ((ta.pivot._x * lt.a) + (ta.pivot._y * lt.c));\r\n\t\t\t\tlt.ty = ta.position._y - ((ta.pivot._x * lt.b) + (ta.pivot._y * lt.d));\r\n\t\t\t}\r\n\r\n\t\t\tta._currentLocalID = ta._localID;\r\n\r\n\t\t\t// force an update..\r\n\t\t\tproj._currentProjID = -1;\r\n\t\t}\r\n\r\n\t\tconst _matrixID = proj._projID;\r\n\t\tif (proj._currentProjID !== _matrixID) {\r\n\t\t\tproj._currentProjID = _matrixID;\r\n\t\t\tproj.updateLocalTransform(lt);\r\n\t\t\tta._parentID = -1;\r\n\t\t}\r\n\r\n\t\tif (ta._parentID !== pwid) {\r\n\t\t\tconst pp = parentTransform.proj as Projection2d;\r\n\t\t\tif (pp && !pp._affine) {\r\n\t\t\t\tproj.world.setToMult(pp.world, proj.local);\r\n\t\t\t} else {\r\n\t\t\t\tproj.world.setToMultLegacy(parentTransform.worldTransform, proj.local);\r\n\t\t\t}\r\n\r\n\t\t\tlet wa = ta.worldTransform;\r\n\r\n\t\t\tproj.world.copyTo(wa, proj._affine, proj.affinePreserveOrientation);\r\n\r\n\t\t\tif (scaleAfterAffine) {\r\n\t\t\t\twa.a *= ta.scale._x;\r\n\t\t\t\twa.b *= ta.scale._x;\r\n\t\t\t\twa.c *= ta.scale._y;\r\n\t\t\t\twa.d *= ta.scale._y;\r\n\r\n\t\t\t\twa.tx -= ((ta.pivot._x * wa.a) + (ta.pivot._y * wa.c));\r\n\t\t\t\twa.ty -= ((ta.pivot._x * wa.b) + (ta.pivot._y * wa.d));\r\n\t\t\t}\r\n\t\t\tta._parentID = pwid;\r\n\t\t\tta._worldID++;\r\n\t\t}\r\n\t}\r\n\r\n\texport class LinearProjection<T> extends AbstractProjection {\r\n\t\tupdateLocalTransform(lt: PIXI.Matrix) {\r\n\r\n\t\t}\r\n\r\n\t\t_projID = 0;\r\n\t\t_currentProjID = -1;\r\n\t\t_affine = AFFINE.NONE;\r\n\t\taffinePreserveOrientation = false;\r\n\t\tscaleAfterAffine = true;\r\n\r\n\t\tset affine(value: AFFINE) {\r\n\t\t\tif (this._affine == value) return;\r\n\t\t\tthis._affine = value;\r\n\t\t\tthis._currentProjID = -1;\r\n\t\t\t// this is because scaleAfterAffine\r\n\t\t\t(this.legacy as any)._currentLocalID = -1;\r\n\t\t}\r\n\r\n\t\tget affine() {\r\n\t\t\treturn this._affine;\r\n\t\t}\r\n\r\n\t\tlocal: T;\r\n\t\tworld: T;\r\n\r\n\t\tset enabled(value: boolean) {\r\n\t\t\tif (value === this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._enabled = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.legacy.updateTransform = transformHack;\r\n\t\t\t\t(this.legacy as any)._parentID = -1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.legacy.updateTransform = PIXI.Transform.prototype.updateTransform;\r\n\t\t\t\t(this.legacy as any)._parentID = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis._currentProjID = -1;\r\n\t\t\tthis._projID = 0;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n    import TYPES = PIXI.TYPES;\r\n    import premultiplyTint = PIXI.utils.premultiplyTint;\r\n\r\n    const shaderVert =\r\n        `precision highp float;\r\nattribute vec3 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aColor;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vColor;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * aVertexPosition;\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vColor = aColor;\r\n}\r\n`;\r\n    const shaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vColor;\r\nvarying float vTextureId;\r\nuniform sampler2D uSamplers[%count%];\r\n\r\nvoid main(void){\r\nvec4 color;\r\n%forloop%\r\ngl_FragColor = color * vColor;\r\n}`;\r\n\r\n    export class Batch3dGeometry extends PIXI.Geometry\r\n    {\r\n        _buffer: PIXI.Buffer;\r\n        _indexBuffer : PIXI.Buffer;\r\n\r\n        constructor(_static = false)\r\n        {\r\n            super();\r\n\r\n            this._buffer = new PIXI.Buffer(null, _static, false);\r\n\r\n            this._indexBuffer = new PIXI.Buffer(null, _static, true);\r\n\r\n            this.addAttribute('aVertexPosition', this._buffer, 3, false, TYPES.FLOAT)\r\n                .addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\r\n                .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n                .addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\r\n                .addIndex(this._indexBuffer);\r\n        }\r\n    }\r\n\r\n    export class Batch2dPluginFactory {\r\n        static create(options: any): any\r\n        {\r\n            const { vertex, fragment, vertexSize, geometryClass } = (Object as any).assign({\r\n                vertex: shaderVert,\r\n                fragment: shaderFrag,\r\n                geometryClass: Batch3dGeometry,\r\n                vertexSize: 7,\r\n            }, options);\r\n\r\n            return class BatchPlugin extends PIXI.AbstractBatchRenderer\r\n            {\r\n                constructor(renderer: PIXI.Renderer)\r\n                {\r\n                    super(renderer);\r\n\r\n                    this.shaderGenerator = new PIXI.BatchShaderGenerator(vertex, fragment);\r\n                    this.geometryClass = geometryClass;\r\n                    this.vertexSize = vertexSize;\r\n                }\r\n\r\n                vertexSize: number;\r\n\r\n                packInterleavedGeometry(element: any, attributeBuffer: PIXI.ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number)\r\n                {\r\n                    const {\r\n                        uint32View,\r\n                        float32View,\r\n                    } = attributeBuffer;\r\n\r\n                    const p = aIndex / this.vertexSize;// float32View.length / 6 / 2;\r\n                    const uvs = element.uvs;\r\n                    const indicies = element.indices;// geometry.getIndex().data;// indicies;\r\n                    const vertexData = element.vertexData;\r\n                    const vertexData2d = element.vertexData2d;\r\n                    const textureId = element._texture.baseTexture._id;\r\n\r\n                    const alpha = Math.min(element.worldAlpha, 1.0);\r\n\r\n                    const argb = alpha < 1.0 && element._texture.baseTexture.premultiplyAlpha ? premultiplyTint(element._tintRGB, alpha)\r\n                        : element._tintRGB + (alpha * 255 << 24);\r\n\r\n                    if (vertexData2d) {\r\n                        let j = 0;\r\n                        for (let i = 0; i < vertexData2d.length; i += 3, j += 2)\r\n                        {\r\n                            float32View[aIndex++] = vertexData2d[i];\r\n                            float32View[aIndex++] = vertexData2d[i + 1];\r\n                            float32View[aIndex++] = vertexData2d[i + 2];\r\n                            float32View[aIndex++] = uvs[j];\r\n                            float32View[aIndex++] = uvs[j + 1];\r\n                            uint32View[aIndex++] = argb;\r\n                            float32View[aIndex++] = textureId;\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < vertexData.length; i += 2)\r\n                        {\r\n                            float32View[aIndex++] = vertexData[i];\r\n                            float32View[aIndex++] = vertexData[i + 1];\r\n                            float32View[aIndex++] = 1.0;\r\n                            float32View[aIndex++] = uvs[i];\r\n                            float32View[aIndex++] = uvs[i + 1];\r\n                            uint32View[aIndex++] = argb;\r\n                            float32View[aIndex++] = textureId;\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 0; i < indicies.length; i++)\r\n                    {\r\n                        indexBuffer[iIndex++] = p + indicies[i];\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n\tPIXI.Renderer.registerPlugin('batch2d', Batch2dPluginFactory.create({}));\r\n}\r\n","namespace pixi_projection {\r\n    import TYPES = PIXI.TYPES;\r\n    import premultiplyTint = PIXI.utils.premultiplyTint;\r\n\r\n    export class UniformBatchRenderer extends PIXI.AbstractBatchRenderer {\r\n        addToBatch(sprite: PIXI.Sprite) {\r\n        }\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    import IPoint = PIXI.IPoint;\r\n\r\n    const p = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\r\n    const a = [0, 0, 0, 0];\r\n\r\n    export abstract class Surface implements IWorldTransform {\r\n        surfaceID = \"default\";\r\n\r\n        _updateID: number = 0;\r\n\r\n        vertexSrc: string = \"\";\r\n        fragmentSrc: string = \"\";\r\n\r\n        fillUniforms(uniforms: any) {\r\n\r\n        }\r\n\r\n        clear() {\r\n\r\n        }\r\n\r\n        /**\r\n         * made for bilinear, other things will need adjustments, like test if (0) is inside\r\n         * @param {ArrayLike<number>} v\r\n         * @param out\r\n         * @param {PIXI.Matrix} after\r\n         */\r\n        boundsQuad(v: ArrayLike<number>, out: any, after?: PIXI.Matrix) {\r\n            let minX = out[0], minY = out[1];\r\n            let maxX = out[0], maxY = out[1];\r\n            for (let i = 2; i < 8; i += 2) {\r\n                if (minX > out[i]) minX = out[i];\r\n                if (maxX < out[i]) maxX = out[i];\r\n                if (minY > out[i + 1]) minY = out[i + 1];\r\n                if (maxY < out[i + 1]) maxY = out[i + 1];\r\n            }\r\n\r\n            p[0].set(minX, minY);\r\n            this.apply(p[0], p[0]);\r\n            p[1].set(maxX, minY);\r\n            this.apply(p[1], p[1]);\r\n            p[2].set(maxX, maxY);\r\n            this.apply(p[2], p[2]);\r\n            p[3].set(minX, maxY);\r\n            this.apply(p[3], p[3]);\r\n\r\n            if (after) {\r\n                after.apply(p[0], p[0]);\r\n                after.apply(p[1], p[1]);\r\n                after.apply(p[2], p[2]);\r\n                after.apply(p[3], p[3]);\r\n                out[0] = p[0].x;\r\n                out[1] = p[0].y;\r\n                out[2] = p[1].x;\r\n                out[3] = p[1].y;\r\n                out[4] = p[2].x;\r\n                out[5] = p[2].y;\r\n                out[6] = p[3].x;\r\n                out[7] = p[3].y;\r\n            } else {\r\n                for (let i = 1; i <= 3; i++) {\r\n                    if (p[i].y < p[0].y || p[i].y == p[0].y && p[i].x < p[0].x) {\r\n                        let t = p[0];\r\n                        p[0] = p[i];\r\n                        p[i] = t;\r\n                    }\r\n                }\r\n\r\n                for (let i = 1; i <= 3; i++) {\r\n                    a[i] = Math.atan2(p[i].y - p[0].y, p[i].x - p[0].x);\r\n                }\r\n                for (let i = 1; i <= 3; i++) {\r\n                    for (let j = i + 1; j <= 3; j++) {\r\n                        if (a[i] > a[j]) {\r\n                            let t = p[i];\r\n                            p[i] = p[j];\r\n                            p[j] = t;\r\n                            let t2 = a[i];\r\n                            a[i] = a[j];\r\n                            a[j] = t2;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                out[0] = p[0].x;\r\n                out[1] = p[0].y;\r\n                out[2] = p[1].x;\r\n                out[3] = p[1].y;\r\n                out[4] = p[2].x;\r\n                out[5] = p[2].y;\r\n                out[6] = p[3].x;\r\n                out[7] = p[3].y;\r\n\r\n                if ((p[3].x - p[2].x) * (p[1].y - p[2].y) - (p[1].x - p[2].x) * (p[3].y - p[2].y) < 0) {\r\n                    //triangle!!!\r\n                    out[4] = p[3].x;\r\n                    out[5] = p[3].y;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        abstract apply(pos: IPoint, newPos: IPoint): IPoint;\r\n\r\n        //TODO: remove props\r\n        abstract applyInverse(pos: IPoint, newPos: IPoint): IPoint;\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    import IPoint = PIXI.IPoint;\r\n\r\n    const tempMat = new PIXI.Matrix();\r\n    const tempRect = new PIXI.Rectangle();\r\n    const tempPoint = new PIXI.Point();\r\n\r\n    export class BilinearSurface extends Surface {\r\n        distortion = new PIXI.Point();\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        clear() {\r\n            this.distortion.set(0, 0);\r\n        }\r\n\r\n        apply(pos: IPoint, newPos?: IPoint): IPoint {\r\n            newPos = newPos || new PIXI.Point();\r\n            const d = this.distortion;\r\n            const m = pos.x * pos.y;\r\n            newPos.x = pos.x + d.x * m;\r\n            newPos.y = pos.y + d.y * m;\r\n            return newPos;\r\n        }\r\n\r\n        applyInverse(pos: IPoint, newPos: IPoint): IPoint {\r\n            newPos = newPos || new PIXI.Point();\r\n            const vx = pos.x, vy = pos.y;\r\n            const dx = this.distortion.x, dy = this.distortion.y;\r\n\r\n            if (dx == 0.0) {\r\n                newPos.x = vx;\r\n                newPos.y = vy / (1.0 + dy * vx);\r\n            } else\r\n            if (dy == 0.0) {\r\n                newPos.y = vy;\r\n                newPos.x = vx/ (1.0 + dx * vy);\r\n            } else {\r\n                const b = (vy * dx - vx * dy + 1.0) * 0.5 / dy;\r\n                const d = b * b + vx / dy;\r\n\r\n                if (d <= 0.00001) {\r\n                    newPos.set(NaN, NaN);\r\n                    return;\r\n                }\r\n                if (dy > 0.0) {\r\n                    newPos.x = - b + Math.sqrt(d);\r\n                } else {\r\n                    newPos.x = - b - Math.sqrt(d);\r\n                }\r\n                newPos.y = (vx / newPos.x - 1.0) / dx;\r\n            }\r\n            return newPos;\r\n        }\r\n\r\n        mapSprite(sprite: PIXI.Sprite, quad: Array<IPoint>, outTransform?: PIXI.Transform) {\r\n            const tex = sprite.texture;\r\n\r\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\r\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\r\n            tempRect.width = tex.orig.width;\r\n            tempRect.height = tex.orig.height;\r\n\r\n            return this.mapQuad(tempRect, quad, outTransform || sprite.transform as PIXI.Transform);\r\n        }\r\n\r\n        mapQuad(rect: PIXI.Rectangle, quad: Array<IPoint>, outTransform: PIXI.Transform) {\r\n            const ax = -rect.x / rect.width;\r\n            const ay = -rect.y / rect.height;\r\n\r\n            const ax2 = (1.0 - rect.x) / rect.width;\r\n            const ay2 = (1.0 - rect.y) / rect.height;\r\n\r\n            const up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\r\n            const up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\r\n            const up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\r\n            const up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\r\n\r\n            const down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\r\n            const down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\r\n            const down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\r\n            const down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\r\n\r\n            const x00 = up1x * (1.0 - ay) + down1x * ay;\r\n            const y00 = up1y * (1.0 - ay) + down1y * ay;\r\n\r\n            const x10 = up2x * (1.0 - ay) + down2x * ay;\r\n            const y10 = up2y * (1.0 - ay) + down2y * ay;\r\n\r\n            const x01 = up1x * (1.0 - ay2) + down1x * ay2;\r\n            const y01 = up1y * (1.0 - ay2) + down1y * ay2;\r\n\r\n            const x11 = up2x * (1.0 - ay2) + down2x * ay2;\r\n            const y11 = up2y * (1.0 - ay2) + down2y * ay2;\r\n\r\n            const mat = tempMat;\r\n            mat.tx = x00;\r\n            mat.ty = y00;\r\n            mat.a = x10 - x00;\r\n            mat.b = y10 - y00;\r\n            mat.c = x01 - x00;\r\n            mat.d = y01 - y00;\r\n            tempPoint.set(x11, y11);\r\n            mat.applyInverse(tempPoint, tempPoint);\r\n            this.distortion.set(tempPoint.x - 1, tempPoint.y - 1);\r\n\r\n            outTransform.setFromMatrix(mat);\r\n\r\n            return this;\r\n        }\r\n\r\n        fillUniforms(uniforms: any) {\r\n            uniforms.distortion = uniforms.distortion || new Float32Array([0, 0, 0, 0]);\r\n            const ax = Math.abs(this.distortion.x);\r\n            const ay = Math.abs(this.distortion.y);\r\n\r\n            uniforms.distortion[0] = ax * 10000 <= ay ? 0 : this.distortion.x;\r\n            uniforms.distortion[1] = ay * 10000 <= ax ? 0 : this.distortion.y;\r\n            uniforms.distortion[2] = 1.0 / uniforms.distortion[0];\r\n            uniforms.distortion[3] = 1.0 / uniforms.distortion[1];\r\n        }\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    export class Container2s extends PIXI.Container {\r\n        constructor() {\r\n            super();\r\n            this.proj = new ProjectionSurface(this.transform);\r\n        }\r\n\r\n        proj: ProjectionSurface;\r\n\r\n        get worldTransform() {\r\n            return this.proj as any;\r\n        }\r\n    }\r\n}\r\n","declare namespace PIXI {\r\n\tinterface Matrix extends pixi_projection.IWorldTransform {\r\n\t\tapply(pos: IPoint, newPos?: IPoint): IPoint;\r\n\r\n\t\tapplyInverse(pos: IPoint, newPos?: IPoint): IPoint;\r\n\t}\r\n}\r\n\r\nnamespace pixi_projection {\r\n\timport IPoint = PIXI.IPoint;\r\n\r\n\tconst fun = PIXI.Transform.prototype.updateTransform;\r\n\r\n\texport interface IWorldTransform {\r\n\t\tapply(pos: IPoint, newPos: IPoint): IPoint;\r\n\r\n\t\t//TODO: remove props\r\n\t\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint;\r\n\t}\r\n\r\n\tfunction transformHack(this: PIXI.Transform, parentTransform: PIXI.Transform): IWorldTransform {\r\n\t\tconst proj = this.proj as ProjectionSurface;\r\n\r\n\t\tconst pp = parentTransform.proj as ProjectionSurface;\r\n\t\tconst ta = this as any;\r\n\r\n\t\tif (!pp) {\r\n\t\t\tfun.call(this, parentTransform);\r\n\t\t\tproj._activeProjection = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (pp._surface) {\r\n\t\t\tproj._activeProjection = pp;\r\n\t\t\tthis.updateLocalTransform();\r\n\t\t\tthis.localTransform.copyFrom(this.worldTransform);\r\n\t\t\tif (ta._parentID < 0) {\r\n\t\t\t\t++ta._worldID;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfun.call(this, parentTransform);\r\n\t\tproj._activeProjection = pp._activeProjection;\r\n\t}\r\n\r\n\texport class ProjectionSurface extends AbstractProjection {\r\n\t\tconstructor(legacy: PIXI.Transform, enable?: boolean) {\r\n\t\t\tsuper(legacy, enable);\r\n\t\t}\r\n\r\n\t\t_surface: Surface = null;\r\n\t\t_activeProjection: ProjectionSurface = null;\r\n\r\n\t\tset enabled(value: boolean) {\r\n\t\t\tif (value === this._enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._enabled = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.legacy.updateTransform = transformHack;\r\n\t\t\t\t(this.legacy as any)._parentID = -1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.legacy.updateTransform = PIXI.Transform.prototype.updateTransform;\r\n\t\t\t\t(this.legacy as any)._parentID = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget surface() {\r\n\t\t\treturn this._surface;\r\n\t\t}\r\n\r\n\t\tset surface(value: Surface) {\r\n\t\t\tif (this._surface == value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._surface = value || null;\r\n\t\t\t(this.legacy as any)._parentID = -1;\r\n\t\t}\r\n\r\n\t\tapplyPartial(pos: IPoint, newPos?: IPoint): IPoint {\r\n\t\t\tif (this._activeProjection !== null) {\r\n\t\t\t\tnewPos = this.legacy.worldTransform.apply(pos, newPos);\r\n\t\t\t\treturn this._activeProjection.surface.apply(newPos, newPos);\r\n\t\t\t}\r\n\t\t\tif (this._surface !== null) {\r\n\t\t\t\treturn this.surface.apply(pos, newPos);\r\n\t\t\t}\r\n\t\t\treturn this.legacy.worldTransform.apply(pos, newPos);\r\n\t\t}\r\n\r\n\t\tapply(pos: IPoint, newPos?: IPoint): IPoint {\r\n\t\t\tif (this._activeProjection !== null) {\r\n\t\t\t\tnewPos = this.legacy.worldTransform.apply(pos, newPos);\r\n\t\t\t\tthis._activeProjection.surface.apply(newPos, newPos);\r\n\t\t\t\treturn this._activeProjection.legacy.worldTransform.apply(newPos, newPos);\r\n\t\t\t}\r\n\t\t\tif (this._surface !== null) {\r\n\t\t\t\tnewPos = this.surface.apply(pos, newPos);\r\n\t\t\t\treturn this.legacy.worldTransform.apply(newPos, newPos);\r\n\t\t\t}\r\n\t\t\treturn this.legacy.worldTransform.apply(pos, newPos);\r\n\t\t}\r\n\r\n\t\tapplyInverse(pos: IPoint, newPos: IPoint) {\r\n\t\t\tif (this._activeProjection !== null) {\r\n\t\t\t\tnewPos = this._activeProjection.legacy.worldTransform.applyInverse(pos, newPos);\r\n\t\t\t\tthis._activeProjection._surface.applyInverse(newPos, newPos);\r\n\t\t\t\treturn this.legacy.worldTransform.applyInverse(newPos, newPos);\r\n\t\t\t}\r\n\t\t\tif (this._surface !== null) {\r\n\t\t\t\tnewPos = this.legacy.worldTransform.applyInverse(pos, newPos);\r\n\t\t\t\treturn this._surface.applyInverse(newPos, newPos);\r\n\t\t\t}\r\n\t\t\treturn this.legacy.worldTransform.applyInverse(pos, newPos);\r\n\t\t}\r\n\r\n\t\tmapBilinearSprite(sprite: PIXI.Sprite, quad: Array<IPoint>) {\r\n\t\t\tif (!(this._surface instanceof BilinearSurface)) {\r\n\t\t\t\tthis.surface = new BilinearSurface();\r\n\t\t\t}\r\n\t\t\t(this.surface as BilinearSurface).mapSprite(sprite, quad, this.legacy);\r\n\t\t}\r\n\r\n\t\t_currentSurfaceID = -1;\r\n\t\t_currentLegacyID = -1;\r\n\t\t_lastUniforms : any = null;\r\n\r\n\t\tclear() {\r\n\t\t\tif (this.surface) {\r\n\t\t\t\tthis.surface.clear();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget uniforms(): any {\r\n\t\t\tif (this._currentLegacyID === (this.legacy as any)._worldID &&\r\n\t\t\t\tthis._currentSurfaceID === this.surface._updateID) {\r\n\r\n\t\t\t\treturn this._lastUniforms;\r\n\t\t\t}\r\n\r\n\t\t\tthis._lastUniforms = this._lastUniforms || {};\r\n\t\t\tthis._lastUniforms.worldTransform = this.legacy.worldTransform.toArray(true)\r\n\t\t\tthis._surface.fillUniforms(this._lastUniforms);\r\n\t\t\treturn this._lastUniforms;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n    import TYPES = PIXI.TYPES;\r\n    import premultiplyTint = PIXI.utils.premultiplyTint;\r\n\r\n    //TODO: Work in progress\r\n\r\n    const shaderVert = `precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec3 aTrans1;\r\nattribute vec3 aTrans2;\r\nattribute vec4 aFrame;\r\nattribute vec4 aColor;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 worldTransform;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec3 vTrans1;\r\nvarying vec3 vTrans2;\r\nvarying vec4 vFrame;\r\nvarying vec4 vColor;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * worldTransform * vec3(aVertexPosition, 1.0);\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aVertexPosition;\r\n    vTrans1 = aTrans1;\r\n    vTrans2 = aTrans2;\r\n    vTextureId = aTextureId;\r\n    vColor = aColor;\r\n    vFrame = aFrame;\r\n}\r\n`;\r\n\r\n    const shaderFrag = `precision highp float;\r\nvarying vec2 vTextureCoord;\r\nvarying vec3 vTrans1;\r\nvarying vec3 vTrans2;\r\nvarying vec4 vFrame;\r\nvarying vec4 vColor;\r\nvarying float vTextureId;\r\n\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 samplerSize[%count%]; \r\nuniform vec4 distortion;\r\n\r\nvoid main(void){\r\nvec2 surface;\r\nvec2 surface2;\r\n\r\nfloat vx = vTextureCoord.x;\r\nfloat vy = vTextureCoord.y;\r\nfloat dx = distortion.x;\r\nfloat dy = distortion.y;\r\nfloat revx = distortion.z;\r\nfloat revy = distortion.w;\r\n\r\nif (distortion.x == 0.0) {\r\n    surface.x = vx;\r\n    surface.y = vy / (1.0 + dy * vx);\r\n    surface2 = surface;\r\n} else\r\nif (distortion.y == 0.0) {\r\n    surface.y = vy;\r\n    surface.x = vx/ (1.0 + dx * vy);\r\n    surface2 = surface;\r\n} else {\r\n    float c = vy * dx - vx * dy;\r\n    float b = (c + 1.0) * 0.5;\r\n    float b2 = (-c + 1.0) * 0.5;\r\n    float d = b * b + vx * dy;\r\n    if (d < -0.00001) {\r\n        discard;\r\n    }\r\n    d = sqrt(max(d, 0.0));\r\n    surface.x = (- b + d) * revy;\r\n    surface2.x = (- b - d) * revy;\r\n    surface.y = (- b2 + d) * revx;\r\n    surface2.y = (- b2 - d) * revx;\r\n}\r\n\r\nvec2 uv;\r\nuv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;\r\nuv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;\r\n\r\nvec2 pixels = uv * samplerSize[0];\r\n\r\nif (pixels.x < vFrame.x || pixels.x > vFrame.z ||\r\n    pixels.y < vFrame.y || pixels.y > vFrame.w) {\r\n    uv.x = vTrans1.x * surface2.x + vTrans1.y * surface2.y + vTrans1.z;\r\n    uv.y = vTrans2.x * surface2.x + vTrans2.y * surface2.y + vTrans2.z;\r\n    pixels = uv * samplerSize[0];\r\n    \r\n    if (pixels.x < vFrame.x || pixels.x > vFrame.z ||\r\n        pixels.y < vFrame.y || pixels.y > vFrame.w) {\r\n        discard;\r\n    }\r\n}\r\n\r\nvec4 edge;\r\nedge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\r\nedge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\r\n\r\nfloat alpha = 1.0; //edge.x * edge.y * edge.z * edge.w;\r\nvec4 rColor = vColor * alpha;\r\n\r\nfloat textureId = floor(vTextureId+0.5);\r\n%forloop%\r\ngl_FragColor = color * rColor;\r\n}`;\r\n\r\n    export class BatchBilineardGeometry extends PIXI.Geometry\r\n    {\r\n        _buffer: PIXI.Buffer;\r\n        _indexBuffer : PIXI.Buffer;\r\n\r\n        constructor(_static = false)\r\n        {\r\n            super();\r\n\r\n            this._buffer = new PIXI.Buffer(null, _static, false);\r\n\r\n            this._indexBuffer = new PIXI.Buffer(null, _static, true);\r\n\r\n            this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\r\n                .addAttribute('aTrans1', this._buffer, 3, false, TYPES.FLOAT)\r\n                .addAttribute('aTrans2', this._buffer, 3, false, TYPES.FLOAT)\r\n                .addAttribute('aFrame', this._buffer, 4, false, TYPES.FLOAT)\r\n                .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n                .addIndex(this._indexBuffer);\r\n        }\r\n    }\r\n\r\n    export class BatchBilinearPluginFactory {\r\n        static create(options: any): any\r\n        {\r\n            const { vertex, fragment, vertexSize, geometryClass } = (Object as any).assign({\r\n                vertex: shaderVert,\r\n                fragment: shaderFrag,\r\n                geometryClass: Batch3dGeometry,\r\n                vertexSize: 7,\r\n            }, options);\r\n\r\n            return class BatchPlugin extends PIXI.AbstractBatchRenderer\r\n            {\r\n                constructor(renderer: PIXI.Renderer)\r\n                {\r\n                    super(renderer);\r\n\r\n                    this.shaderGenerator = new PIXI.BatchShaderGenerator(vertex, fragment);\r\n                    this.geometryClass = geometryClass;\r\n                    this.vertexSize = vertexSize;\r\n                }\r\n\r\n                vertexSize: number;\r\n\r\n                defUniforms = {\r\n                    worldTransform: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),\r\n                    distortion: new Float32Array([0, 0])\r\n                };\r\n\r\n                getUniforms(sprite: PIXI.Sprite) {\r\n                    let proj = (sprite as Sprite2s).proj;\r\n                    let shader = this._shader;\r\n\r\n                    if (proj.surface !== null) {\r\n                        return proj.uniforms;\r\n                    }\r\n                    if (proj._activeProjection !== null) {\r\n                        return proj._activeProjection.uniforms;\r\n                    }\r\n                    return this.defUniforms;\r\n                }\r\n\r\n                packGeometry(element: any, float32View: Float32Array, uint32View: Uint32Array,\r\n                             indexBuffer: Uint16Array, index: number, indexCount: number)\r\n                {\r\n                    const p = index / this.vertexSize;// float32View.length / 6 / 2;\r\n                    const uvs = element.uvs;\r\n                    const indices = element.indices;// geometry.getIndex().data;// indicies;\r\n                    const vertexData = element.vertexData;\r\n                    const tex = element._texture;\r\n                    const frame = tex._frame;\r\n                    const aTrans = element.aTrans;\r\n                    // const textureId = element._texture.baseTexture._id;\r\n\r\n                    const alpha = Math.min(element.worldAlpha, 1.0);\r\n\r\n                    const argb = alpha < 1.0 && element._texture.baseTexture.premultiplyAlpha ? premultiplyTint(element._tintRGB, alpha)\r\n                        : element._tintRGB + (alpha * 255 << 24);\r\n\r\n                    for (let i = 0; i < vertexData.length; i += 2)\r\n                    {\r\n                        float32View[index] = vertexData[i * 2];\r\n                        float32View[index + 1] = vertexData[i * 2 + 1];\r\n\r\n                        float32View[index + 2] = aTrans.a;\r\n                        float32View[index + 3] = aTrans.c;\r\n                        float32View[index + 4] = aTrans.tx;\r\n                        float32View[index + 5] = aTrans.b;\r\n                        float32View[index + 6] = aTrans.d;\r\n                        float32View[index + 7] = aTrans.ty;\r\n\r\n                        float32View[index + 8] = frame.x;\r\n                        float32View[index + 9] = frame.y;\r\n                        float32View[index + 10] = frame.x + frame.width;\r\n                        float32View[index + 11] = frame.y + frame.height;\r\n\r\n                        uint32View[index + 12] = argb;\r\n                        // float32View[index + 13] = textureId;\r\n                        index += 13;\r\n                    }\r\n\r\n                    for (let i = 0; i < indices.length; i++)\r\n                    {\r\n                        indexBuffer[indexCount++] = p + indices[i];\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    // PIXI.Renderer.registerPlugin('batch_bilinear', BatchBilinearPluginFactory.create({}));\r\n}\r\n","namespace pixi_projection {\r\n\texport class Sprite2s extends PIXI.Sprite {\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.proj = new ProjectionSurface(this.transform);\r\n\t\t\tthis.pluginName = 'batch_bilinear';\r\n\t\t}\r\n\r\n\t\tproj: ProjectionSurface;\r\n\t\taTrans = new PIXI.Matrix();\r\n\r\n\t\t_calculateBounds() {\r\n\t\t\tthis.calculateTrimmedVertices();\r\n\t\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\r\n\t\t}\r\n\r\n\t\tcalculateVertices() {\r\n\t\t\tconst wid = (this.transform as any)._worldID;\r\n\t\t\tconst tuid = (this._texture as any)._updateID;\r\n\t\t\tif (this._transformID === wid && this._textureID === tuid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transformID = wid;\r\n\t\t\tthis._textureID = tuid;\r\n\r\n\t\t\tconst texture = this._texture;\r\n\t\t\tconst vertexData = this.vertexData;\r\n\t\t\tconst trim = texture.trim;\r\n\t\t\tconst orig = texture.orig;\r\n\t\t\tconst anchor = this._anchor;\r\n\r\n\t\t\tlet w0 = 0;\r\n\t\t\tlet w1 = 0;\r\n\t\t\tlet h0 = 0;\r\n\t\t\tlet h1 = 0;\r\n\r\n\t\t\tif (trim) {\r\n\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\r\n\t\t\t\tw0 = w1 + trim.width;\r\n\r\n\t\t\t\th1 = trim.y - (anchor._y * orig.height);\r\n\t\t\t\th0 = h1 + trim.height;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tw1 = -anchor._x * orig.width;\r\n\t\t\t\tw0 = w1 + orig.width;\r\n\r\n\t\t\t\th1 = -anchor._y * orig.height;\r\n\t\t\t\th0 = h1 + orig.height;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.proj._surface) {\r\n\t\t\t\tvertexData[0] = w1;\r\n\t\t\t\tvertexData[1] = h1;\r\n\t\t\t\tvertexData[2] = w0;\r\n\t\t\t\tvertexData[3] = h1;\r\n\t\t\t\tvertexData[4] = w0;\r\n\t\t\t\tvertexData[5] = h0;\r\n\t\t\t\tvertexData[6] = w1;\r\n\t\t\t\tvertexData[7] = h0;\r\n\t\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData);\r\n\t\t\t} else {\r\n\t\t\t\tconst wt = this.transform.worldTransform;\r\n\t\t\t\tconst a = wt.a;\r\n\t\t\t\tconst b = wt.b;\r\n\t\t\t\tconst c = wt.c;\r\n\t\t\t\tconst d = wt.d;\r\n\t\t\t\tconst tx = wt.tx;\r\n\t\t\t\tconst ty = wt.ty;\r\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\r\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\r\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\r\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\r\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\r\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\r\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\r\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\r\n\t\t\t\tif (this.proj._activeProjection) {\r\n\t\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!texture.uvMatrix) {\r\n\t\t\t\ttexture.uvMatrix = new PIXI.TextureMatrix(texture);\r\n\t\t\t}\r\n\t\t\ttexture.uvMatrix.update();\r\n\r\n\t\t\tconst aTrans = this.aTrans;\r\n\t\t\taTrans.set(orig.width, 0, 0, orig.height, w1, h1);\r\n\t\t\tif (this.proj._surface === null) {\r\n\t\t\t\taTrans.prepend(this.transform.worldTransform);\r\n\t\t\t}\r\n\t\t\taTrans.invert();\r\n\t\t\taTrans.prepend((texture.uvMatrix as any).mapCoord);\r\n\t\t}\r\n\r\n\t\tcalculateTrimmedVertices() {\r\n\t\t\tconst wid = (this.transform as any)._worldID;\r\n\t\t\tconst tuid = (this._texture as any)._updateID;\r\n\t\t\tif (!this.vertexTrimmedData) {\r\n\t\t\t\tthis.vertexTrimmedData = new Float32Array(8);\r\n\t\t\t}\r\n\t\t\telse if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transformTrimmedID = wid;\r\n\t\t\tthis._textureTrimmedID = tuid;\r\n\r\n\t\t\t// lets do some special trim code!\r\n\t\t\tconst texture = this._texture;\r\n\t\t\tconst vertexData = this.vertexTrimmedData;\r\n\t\t\tconst orig = texture.orig;\r\n\t\t\tconst anchor = this._anchor;\r\n\r\n\t\t\t// lets calculate the new untrimmed bounds..\r\n\r\n\t\t\tconst w1 = -anchor._x * orig.width;\r\n\t\t\tconst w0 = w1 + orig.width;\r\n\r\n\t\t\tconst h1 = -anchor._y * orig.height;\r\n\t\t\tconst h0 = h1 + orig.height;\r\n\r\n\t\t\t//TODO: take rotations into account! form temporary bounds\r\n\r\n\t\t\tif (this.proj._surface) {\r\n\t\t\t\tvertexData[0] = w1;\r\n\t\t\t\tvertexData[1] = h1;\r\n\t\t\t\tvertexData[2] = w0;\r\n\t\t\t\tvertexData[3] = h1;\r\n\t\t\t\tvertexData[4] = w0;\r\n\t\t\t\tvertexData[5] = h0;\r\n\t\t\t\tvertexData[6] = w1;\r\n\t\t\t\tvertexData[7] = h0;\r\n\t\t\t\tthis.proj._surface.boundsQuad(vertexData, vertexData, this.transform.worldTransform);\r\n\t\t\t} else {\r\n\t\t\t\tlet wt = this.transform.worldTransform;\r\n\t\t\t\tlet a = wt.a;\r\n\t\t\t\tlet b = wt.b;\r\n\t\t\t\tlet c = wt.c;\r\n\t\t\t\tlet d = wt.d;\r\n\t\t\t\tlet tx = wt.tx;\r\n\t\t\t\tlet ty = wt.ty;\r\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\r\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\r\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\r\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\r\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\r\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\r\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\r\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\r\n\t\t\t\tif (this.proj._activeProjection) {\r\n\t\t\t\t\tthis.proj._activeProjection.surface.boundsQuad(vertexData, vertexData,\r\n\t\t\t\t\t\tthis.proj._activeProjection.legacy.worldTransform);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj as any;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\texport class Text2s extends PIXI.Text {\r\n\t\tconstructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n\t\t\tsuper(text, style, canvas);\r\n\t\t\tthis.proj = new ProjectionSurface(this.transform);\r\n\t\t\tthis.pluginName = 'batch_bilinear';\r\n\t\t}\r\n\r\n\t\tproj: ProjectionSurface;\r\n\r\n\t\taTrans = new PIXI.Matrix();\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj as any;\r\n\t\t}\r\n\t}\r\n\r\n\t(Text2s.prototype as any).calculateVertices = Sprite2s.prototype.calculateVertices;\r\n\t(Text2s.prototype as any).calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\r\n\t(Text2s.prototype as any)._calculateBounds = Sprite2s.prototype._calculateBounds;\r\n}\r\n","declare module PIXI {\r\n\tinterface Sprite {\r\n\t\tconvertTo2s(): void;\r\n\t}\r\n\r\n\tinterface Container {\r\n\t\tconvertTo2s(): void;\r\n\r\n\t\tconvertSubtreeTo2s(): void;\r\n\t}\r\n}\r\n\r\nnamespace pixi_projection {\r\n\t(PIXI as any).Sprite.prototype.convertTo2s = function () {\r\n\t\tif (this.proj) return;\r\n\t\t//cointainer\r\n\t\tthis.pluginName = 'sprite_bilinear';\r\n\t\tthis.aTrans = new PIXI.Matrix();\r\n\t\tthis.calculateVertices = Sprite2s.prototype.calculateVertices;\r\n\t\tthis.calculateTrimmedVertices = Sprite2s.prototype.calculateTrimmedVertices;\r\n\t\tthis._calculateBounds = Sprite2s.prototype._calculateBounds;\r\n\t\tPIXI.Container.prototype.convertTo2s.call(this);\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertTo2s = function () {\r\n\t\tif (this.proj) return;\r\n\t\tthis.proj = new Projection2d(this.transform);\r\n\t\tObject.defineProperty(this, \"worldTransform\", {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.proj;\r\n\t\t\t},\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertSubtreeTo2s = function () {\r\n\t\tthis.convertTo2s();\r\n\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\tthis.children[i].convertSubtreeTo2s();\r\n\t\t}\r\n\t};\r\n}\r\n","namespace pixi_projection {\r\n\texport function container2dWorldTransform() {\r\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n\t}\r\n\r\n\texport class Container2d extends PIXI.Container {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.proj = new Projection2d(this.transform);\r\n\t\t}\r\n\r\n\t\tproj: Projection2d;\r\n\r\n\t\ttoLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n\t\t        point?: T, skipUpdate?: boolean,\r\n\t\t        step = TRANSFORM_STEP.ALL): T {\r\n\r\n\t\t\tif (from)\r\n\t\t\t{\r\n\t\t\t\tposition = from.toGlobal(position, point, skipUpdate);\r\n\t\t\t}\r\n\r\n\t\t\tif (!skipUpdate)\r\n\t\t\t{\r\n\t\t\t\tthis._recursivePostUpdateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tif (step >= TRANSFORM_STEP.PROJ) {\r\n\t\t\t\tif (!skipUpdate) {\r\n\t\t\t\t\tthis.displayObjectUpdateTransform();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.proj.affine) {\r\n\t\t\t\t\treturn this.transform.worldTransform.applyInverse(position, point) as any;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.proj.world.applyInverse(position, point) as any;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tpoint  = this.parent.worldTransform.applyInverse(position, point) as any;\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copyFrom(position);\r\n\t\t\t}\r\n\t\t\tif (step === TRANSFORM_STEP.NONE) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.transform.localTransform.applyInverse(point, point) as any;\r\n\t\t}\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n\t\t}\r\n\t}\r\n\r\n\texport let container2dToLocal = Container2d.prototype.toLocal;\r\n}\r\n","// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\r\n\r\nnamespace pixi_projection {\r\n\timport Point = PIXI.Point;\r\n\timport IPoint = PIXI.IPoint;\r\n\r\n\tconst mat3id = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\texport enum AFFINE {\r\n\t\tNONE = 0,\r\n\t\tFREE = 1,\r\n\t\tAXIS_X = 2,\r\n\t\tAXIS_Y = 3,\r\n\t\tPOINT = 4,\r\n\t\tAXIS_XR = 5\r\n\r\n\t}\r\n\r\n\texport class Matrix2d {\r\n\t\t/**\r\n\t\t * A default (identity) matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly IDENTITY = new Matrix2d();\r\n\r\n\t\t/**\r\n\t\t * A temp matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly TEMP_MATRIX = new Matrix2d();\r\n\r\n\t\t/**\r\n\t\t * mat3 implementation through array of 9 elements\r\n\t\t */\r\n\t\tmat3: Float64Array;\r\n\r\n\t\tfloatArray: Float32Array = null;\r\n\r\n\t\tconstructor(backingArray?: ArrayLike<number>) {\r\n\t\t\tthis.mat3 = new Float64Array(backingArray || mat3id);\r\n\t\t}\r\n\r\n\t\tget a() {\r\n\t\t\treturn this.mat3[0] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tget b() {\r\n\t\t\treturn this.mat3[1] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tget c() {\r\n\t\t\treturn this.mat3[3] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tget d() {\r\n\t\t\treturn this.mat3[4] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tget tx() {\r\n\t\t\treturn this.mat3[6] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tget ty() {\r\n\t\t\treturn this.mat3[7] / this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset a(value: number) {\r\n\t\t\tthis.mat3[0] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset b(value: number) {\r\n\t\t\tthis.mat3[1] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset c(value: number) {\r\n\t\t\tthis.mat3[3] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset d(value: number) {\r\n\t\t\tthis.mat3[4] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset tx(value: number) {\r\n\t\t\tthis.mat3[6] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset ty(value: number) {\r\n\t\t\tthis.mat3[7] = value * this.mat3[8];\r\n\t\t}\r\n\r\n\t\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\r\n\t\t\tlet mat3 = this.mat3;\r\n\t\t\tmat3[0] = a;\r\n\t\t\tmat3[1] = b;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = c;\r\n\t\t\tmat3[4] = d;\r\n\t\t\tmat3[5] = 0;\r\n\t\t\tmat3[6] = tx;\r\n\t\t\tmat3[7] = ty;\r\n\t\t\tmat3[8] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\r\n\t\t\tif (!this.floatArray) {\r\n\t\t\t\tthis.floatArray = new Float32Array(9);\r\n\t\t\t}\r\n\r\n\t\t\tconst array = out || this.floatArray;\r\n\t\t\tconst mat3 = this.mat3;\r\n\r\n\t\t\tif (transpose) {\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[1];\r\n\t\t\t\tarray[2] = mat3[2];\r\n\t\t\t\tarray[3] = mat3[3];\r\n\t\t\t\tarray[4] = mat3[4];\r\n\t\t\t\tarray[5] = mat3[5];\r\n\t\t\t\tarray[6] = mat3[6];\r\n\t\t\t\tarray[7] = mat3[7];\r\n\t\t\t\tarray[8] = mat3[8];\r\n\t\t\t} else {\r\n\t\t\t\t//this branch is NEVER USED in pixi\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[3];\r\n\t\t\t\tarray[2] = mat3[6];\r\n\t\t\t\tarray[3] = mat3[1];\r\n\t\t\t\tarray[4] = mat3[4];\r\n\t\t\t\tarray[5] = mat3[7];\r\n\t\t\t\tarray[6] = mat3[2];\r\n\t\t\t\tarray[7] = mat3[5];\r\n\t\t\t\tarray[8] = mat3[8];\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\t//TODO: remove props\r\n\t\tapply(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new PIXI.Point();\r\n\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\r\n\t\t\tlet z = 1.0 / (mat3[2] * x + mat3[5] * y + mat3[8]);\r\n\t\t\tnewPos.x = z * (mat3[0] * x + mat3[3] * y + mat3[6]);\r\n\t\t\tnewPos.y = z * (mat3[1] * x + mat3[4] * y + mat3[7]);\r\n\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\ttranslate(tx: number, ty: number) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] += tx * mat3[2];\r\n\t\t\tmat3[1] += ty * mat3[2];\r\n\t\t\tmat3[3] += tx * mat3[5];\r\n\t\t\tmat3[4] += ty * mat3[5];\r\n\t\t\tmat3[6] += tx * mat3[8];\r\n\t\t\tmat3[7] += ty * mat3[8];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(x: number, y: number) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] *= x;\r\n\t\t\tmat3[1] *= y;\r\n\t\t\tmat3[3] *= x;\r\n\t\t\tmat3[4] *= y;\r\n\t\t\tmat3[6] *= x;\r\n\t\t\tmat3[7] *= y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscaleAndTranslate(scaleX: number, scaleY: number, tx: number, ty: number) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] = scaleX * mat3[0] + tx * mat3[2];\r\n\t\t\tmat3[1] = scaleY * mat3[1] + ty * mat3[2];\r\n\t\t\tmat3[3] = scaleX * mat3[3] + tx * mat3[5];\r\n\t\t\tmat3[4] = scaleY * mat3[4] + ty * mat3[5];\r\n\t\t\tmat3[6] = scaleX * mat3[6] + tx * mat3[8];\r\n\t\t\tmat3[7] = scaleY * mat3[7] + ty * mat3[8];\r\n\t\t}\r\n\r\n\t\t//TODO: remove props\r\n\t\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new Point();\r\n\r\n\t\t\tconst a = this.mat3;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[3], a02 = a[6],\r\n\t\t\t\ta10 = a[1], a11 = a[4], a12 = a[7],\r\n\t\t\t\ta20 = a[2], a21 = a[5], a22 = a[8];\r\n\r\n\t\t\tlet newX = (a22 * a11 - a12 * a21) * x + (-a22 * a01 + a02 * a21) * y + (a12 * a01 - a02 * a11);\r\n\t\t\tlet newY = (-a22 * a10 + a12 * a20) * x + (a22 * a00 - a02 * a20) * y + (-a12 * a00 + a02 * a10);\r\n\t\t\tlet newZ = (a21 * a10 - a11 * a20) * x + (-a21 * a00 + a01 * a20) * y + (a11 * a00 - a01 * a10);\r\n\r\n\t\t\tnewPos.x = newX / newZ;\r\n\t\t\tnewPos.y = newY / newZ;\r\n\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\tinvert(): Matrix2d {\r\n\t\t\tconst a = this.mat3;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\r\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\r\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n\t\t\t\tb01 = a22 * a11 - a12 * a21,\r\n\t\t\t\tb11 = -a22 * a10 + a12 * a20,\r\n\t\t\t\tb21 = a21 * a10 - a11 * a20;\r\n\r\n\t\t\t// Calculate the determinant\r\n\t\t\tlet det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\t\t\tif (!det) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tdet = 1.0 / det;\r\n\r\n\t\t\ta[0] = b01 * det;\r\n\t\t\ta[1] = (-a22 * a01 + a02 * a21) * det;\r\n\t\t\ta[2] = (a12 * a01 - a02 * a11) * det;\r\n\t\t\ta[3] = b11 * det;\r\n\t\t\ta[4] = (a22 * a00 - a02 * a20) * det;\r\n\t\t\ta[5] = (-a12 * a00 + a02 * a10) * det;\r\n\t\t\ta[6] = b21 * det;\r\n\t\t\ta[7] = (-a21 * a00 + a01 * a20) * det;\r\n\t\t\ta[8] = (a11 * a00 - a01 * a10) * det;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity(): Matrix2d {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] = 1;\r\n\t\t\tmat3[1] = 0;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = 0;\r\n\t\t\tmat3[4] = 1;\r\n\t\t\tmat3[5] = 0;\r\n\t\t\tmat3[6] = 0;\r\n\t\t\tmat3[7] = 0;\r\n\t\t\tmat3[8] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Matrix2d(this.mat3);\r\n\t\t}\r\n\r\n\t\tcopyTo2dOr3d(matrix: Matrix2d) {\r\n\t\t    const mat3 = this.mat3;\r\n            const ar2 = matrix.mat3;\r\n            ar2[0] = mat3[0];\r\n            ar2[1] = mat3[1];\r\n            ar2[2] = mat3[2];\r\n            ar2[3] = mat3[3];\r\n            ar2[4] = mat3[4];\r\n            ar2[5] = mat3[5];\r\n            ar2[6] = mat3[6];\r\n            ar2[7] = mat3[7];\r\n            ar2[8] = mat3[8];\r\n            return matrix;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return matrix\r\n\t\t */\r\n        copyTo(matrix: PIXI.Matrix, affine?: AFFINE, preserveOrientation?: boolean) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tconst d = 1.0 / mat3[8];\r\n\t\t\tconst tx = mat3[6] * d, ty = mat3[7] * d;\r\n\t\t\tmatrix.a = (mat3[0] - mat3[2] * tx) * d;\r\n\t\t\tmatrix.b = (mat3[1] - mat3[2] * ty) * d;\r\n\t\t\tmatrix.c = (mat3[3] - mat3[5] * tx) * d;\r\n\t\t\tmatrix.d = (mat3[4] - mat3[5] * ty) * d;\r\n\t\t\tmatrix.tx = tx;\r\n\t\t\tmatrix.ty = ty;\r\n\r\n\t\t\tif (affine >= 2) {\r\n\t\t\t\tlet D = matrix.a * matrix.d - matrix.b * matrix.c;\r\n\t\t\t\tif (!preserveOrientation) {\r\n\t\t\t\t\tD = Math.abs(D);\r\n\t\t\t\t}\r\n\t\t\t\tif (affine === AFFINE.POINT) {\r\n\t\t\t\t\tif (D > 0) {\r\n\t\t\t\t\t\tD = 1;\r\n\t\t\t\t\t} else D = -1;\r\n\t\t\t\t\tmatrix.a = D;\r\n\t\t\t\t\tmatrix.b = 0;\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t\tmatrix.d = D;\r\n\t\t\t\t} else if (affine === AFFINE.AXIS_X) {\r\n\t\t\t\t\tD /= Math.sqrt(matrix.b * matrix.b + matrix.d * matrix.d);\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t\tmatrix.d = D;\r\n\t\t\t\t} else if (affine === AFFINE.AXIS_Y) {\r\n\t\t\t\t\tD /= Math.sqrt(matrix.a * matrix.a + matrix.c * matrix.c);\r\n\t\t\t\t\tmatrix.a = D;\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (affine === AFFINE.AXIS_XR) {\r\n\t\t\t\t\tmatrix.a =  matrix.d * D;\r\n\t\t\t\t\tmatrix.c = -matrix.b * D;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return\r\n\t\t */\r\n\t\tcopyFrom(matrix: PIXI.Matrix) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] = matrix.a;\r\n\t\t\tmat3[1] = matrix.b;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = matrix.c;\r\n\t\t\tmat3[4] = matrix.d;\r\n\t\t\tmat3[5] = 0;\r\n\t\t\tmat3[6] = matrix.tx;\r\n\t\t\tmat3[7] = matrix.ty;\r\n\t\t\tmat3[8] = 1.0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetToMultLegacy(pt: PIXI.Matrix, lt: Matrix2d) {\r\n\t\t\tconst out = this.mat3;\r\n\t\t\tconst b = lt.mat3;\r\n\r\n\t\t\tconst a00 = pt.a, a01 = pt.b,\r\n\t\t\t\ta10 = pt.c, a11 = pt.d,\r\n\t\t\t\ta20 = pt.tx, a21 = pt.ty,\r\n\r\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\r\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\r\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n\t\t\tout[2] = b02;\r\n\r\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n\t\t\tout[5] = b12;\r\n\r\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n\t\t\tout[8] = b22;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetToMultLegacy2(pt: Matrix2d, lt: PIXI.Matrix) {\r\n\t\t\tconst out = this.mat3;\r\n\t\t\tconst a = pt.mat3;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\r\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\r\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n\t\t\t\tb00 = lt.a, b01 = lt.b,\r\n\t\t\t\tb10 = lt.c, b11 = lt.d,\r\n\t\t\t\tb20 = lt.tx, b21 = lt.ty;\r\n\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11;\r\n\t\t\tout[2] = b00 * a02 + b01 * a12;\r\n\r\n\t\t\tout[3] = b10 * a00 + b11 * a10;\r\n\t\t\tout[4] = b10 * a01 + b11 * a11;\r\n\t\t\tout[5] = b10 * a02 + b11 * a12;\r\n\r\n\t\t\tout[6] = b20 * a00 + b21 * a10 + a20;\r\n\t\t\tout[7] = b20 * a01 + b21 * a11 + a21;\r\n\t\t\tout[8] = b20 * a02 + b21 * a12 + a22;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// that's transform multiplication we use\r\n\t\tsetToMult(pt: Matrix2d, lt: Matrix2d) {\r\n\t\t\tconst out = this.mat3;\r\n\t\t\tconst a = pt.mat3, b = lt.mat3;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\r\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\r\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\r\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\r\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n\t\t\tout[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n\t\t\tout[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n\t\t\tout[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tprepend(lt: any) {\r\n\t\t\tif (lt.mat3) {\r\n\t\t\t\treturn this.setToMult(lt, this);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.setToMultLegacy(lt, this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\timport IPoint = PIXI.IPoint;\r\n\r\n\tconst t0 = new PIXI.Point();\r\n\tconst tt = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\r\n\tconst tempRect = new PIXI.Rectangle();\r\n\tconst tempMat = new Matrix2d();\r\n\r\n\texport class Projection2d extends LinearProjection<Matrix2d> {\r\n\r\n\t\tconstructor(legacy: PIXI.Transform, enable?: boolean) {\r\n\t\t\tsuper(legacy, enable);\r\n\t\t\tthis.local = new Matrix2d();\r\n\t\t\tthis.world = new Matrix2d();\r\n\t\t}\r\n\r\n\t\tmatrix = new Matrix2d();\r\n\t\tpivot = new PIXI.ObservablePoint(this.onChange, this, 0, 0);\r\n\r\n\t\treverseLocalOrder = false;\r\n\r\n\t\tonChange() {\r\n\t\t\tconst pivot = this.pivot;\r\n\t\t\tconst mat3 = this.matrix.mat3;\r\n\r\n\t\t\tmat3[6] = -(pivot._x * mat3[0] + pivot._y * mat3[3]);\r\n\t\t\tmat3[7] = -(pivot._x * mat3[1] + pivot._y * mat3[4]);\r\n\r\n\t\t\tthis._projID++;\r\n\t\t}\r\n\r\n\t\tsetAxisX(p: IPoint, factor: number = 1): void {\r\n\t\t\tconst x = p.x, y = p.y;\r\n\t\t\tconst d = Math.sqrt(x * x + y * y);\r\n\t\t\tconst mat3 = this.matrix.mat3;\r\n\t\t\tmat3[0] = x / d;\r\n\t\t\tmat3[1] = y / d;\r\n\t\t\tmat3[2] = factor / d;\r\n\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\r\n\t\tsetAxisY(p: IPoint, factor: number = 1) {\r\n\t\t\tconst x = p.x, y = p.y;\r\n\t\t\tconst d = Math.sqrt(x * x + y * y);\r\n\t\t\tconst mat3 = this.matrix.mat3;\r\n\t\t\tmat3[3] = x / d;\r\n\t\t\tmat3[4] = y / d;\r\n\t\t\tmat3[5] = factor / d;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\r\n\t\tmapSprite(sprite: PIXI.Sprite, quad: Array<IPoint>) {\r\n\t\t\tconst tex = sprite.texture;\r\n\r\n\t\t\ttempRect.x = -sprite.anchor.x * tex.orig.width;\r\n\t\t\ttempRect.y = -sprite.anchor.y * tex.orig.height;\r\n\t\t\ttempRect.width = tex.orig.width;\r\n\t\t\ttempRect.height = tex.orig.height;\r\n\r\n\t\t\treturn this.mapQuad(tempRect, quad);\r\n\t\t}\r\n\r\n\t\tmapQuad(rect: PIXI.Rectangle, p: Array<IPoint>) {\r\n\t\t\t// utils.getPositionFromQuad(p, anchor, t0);\r\n\t\t\ttt[0].set(rect.x, rect.y);\r\n\t\t\ttt[1].set(rect.x + rect.width, rect.y);\r\n\t\t\ttt[2].set(rect.x + rect.width, rect.y + rect.height);\r\n\t\t\ttt[3].set(rect.x, rect.y + rect.height);\r\n\r\n\t\t\tlet k1 = 1, k2 = 2, k3 = 3;\r\n\t\t\tlet f = utils.getIntersectionFactor(p[0], p[2], p[1], p[3], t0);\r\n\t\t\tif (f !== 0) {\r\n\t\t\t\tk1 = 1;\r\n\t\t\t\tk2 = 3;\r\n\t\t\t\tk3 = 2;\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t\t/*f = utils.getIntersectionFactor(p[0], p[1], p[2], p[3], t0);\r\n\t\t\t\tif (f > 0) {\r\n\t\t\t\t\tk1 = 2;\r\n\t\t\t\t\tk2 = 3;\r\n\t\t\t\t\tk3 = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tf = utils.getIntersectionFactor(p[0], p[3], p[1], p[2], t0);\r\n\t\t\t\t\tif (f > 0) {\r\n\t\t\t\t\t\t// cant find it :(\r\n\t\t\t\t\t\tk1 = 1;\r\n\t\t\t\t\t\tk2 = 2;\r\n\t\t\t\t\t\tk3 = 3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\tlet d0 = Math.sqrt((p[0].x - t0.x) * (p[0].x - t0.x) + (p[0].y - t0.y) * (p[0].y - t0.y));\r\n\t\t\tlet d1 = Math.sqrt((p[k1].x - t0.x) * (p[k1].x - t0.x) + (p[k1].y - t0.y) * (p[k1].y - t0.y));\r\n\t\t\tlet d2 = Math.sqrt((p[k2].x - t0.x) * (p[k2].x - t0.x) + (p[k2].y - t0.y) * (p[k2].y - t0.y));\r\n\t\t\tlet d3 = Math.sqrt((p[k3].x - t0.x) * (p[k3].x - t0.x) + (p[k3].y - t0.y) * (p[k3].y - t0.y));\r\n\r\n\t\t\tlet q0 = (d0 + d3) / d3;\r\n\t\t\tlet q1 = (d1 + d2) / d2;\r\n\t\t\tlet q2 = (d1 + d2) / d1;\r\n\r\n\t\t\tlet mat3 = this.matrix.mat3;\r\n\t\t\tmat3[0] = tt[0].x * q0;\r\n\t\t\tmat3[1] = tt[0].y * q0;\r\n\t\t\tmat3[2] = q0;\r\n\t\t\tmat3[3] = tt[k1].x * q1;\r\n\t\t\tmat3[4] = tt[k1].y * q1;\r\n\t\t\tmat3[5] = q1;\r\n\t\t\tmat3[6] = tt[k2].x * q2;\r\n\t\t\tmat3[7] = tt[k2].y * q2;\r\n\t\t\tmat3[8] = q2;\r\n\t\t\tthis.matrix.invert();\r\n\r\n\t\t\tmat3 = tempMat.mat3;\r\n\t\t\tmat3[0] = p[0].x;\r\n\t\t\tmat3[1] = p[0].y;\r\n\t\t\tmat3[2] = 1;\r\n\t\t\tmat3[3] = p[k1].x;\r\n\t\t\tmat3[4] = p[k1].y;\r\n\t\t\tmat3[5] = 1;\r\n\t\t\tmat3[6] = p[k2].x;\r\n\t\t\tmat3[7] = p[k2].y;\r\n\t\t\tmat3[8] = 1;\r\n\r\n\t\t\tthis.matrix.setToMult(tempMat, this.matrix);\r\n\t\t\tthis._projID++;\r\n\t\t}\r\n\r\n\t\tupdateLocalTransform(lt: PIXI.Matrix) {\r\n\t\t\tif (this._projID !== 0) {\r\n\t\t\t\tif (this.reverseLocalOrder) {\r\n\t\t\t\t\t// tilingSprite inside order\r\n\t\t\t\t\tthis.local.setToMultLegacy2(this.matrix, lt);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// good order\r\n\t\t\t\t\tthis.local.setToMultLegacy(lt, this.matrix);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.local.copyFrom(lt);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tsuper.clear();\r\n\t\t\tthis.matrix.identity();\r\n\t\t\tthis.pivot.set(0, 0);\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n    export class Mesh2d extends PIXI.Mesh {\r\n        static defaultVertexShader =\r\n            `precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform mat3 uTransform;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);\r\n    gl_Position.z = 0.0;\r\n\r\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\r\n}\r\n`;\r\n        static defaultFragmentShader = `\r\nvarying vec2 vTextureCoord;\r\nuniform vec4 uColor;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\r\n}`;\r\n        constructor(geometry: PIXI.Geometry, shader: PIXI.Shader, state: PIXI.State, drawMode?: number)\r\n        {\r\n            super(geometry, shader, state, drawMode);\r\n            this.proj = new Projection2d(this.transform);\r\n        }\r\n\r\n        vertexData2d: Float32Array = null;\r\n        proj: Projection2d;\r\n\r\n        calculateVertices()\r\n        {\r\n            if (this.proj._affine) {\r\n                this.vertexData2d = null;\r\n                super.calculateVertices();\r\n                return;\r\n            }\r\n\r\n            const geometry = this.geometry as any;\r\n            const vertices = geometry.buffers[0].data;\r\n            const thisAny = this as any;\r\n\r\n            if (geometry.vertexDirtyId === thisAny.vertexDirty && thisAny._transformID === thisAny.transform._worldID)\r\n            {\r\n                return;\r\n            }\r\n\r\n            thisAny._transformID = thisAny.transform._worldID;\r\n\r\n            if (thisAny.vertexData.length !== vertices.length)\r\n            {\r\n                thisAny.vertexData = new Float32Array(vertices.length);\r\n            }\r\n\r\n            if (this.vertexData2d.length  !== vertices.length * 3 / 2)\r\n            {\r\n                this.vertexData2d = new Float32Array(vertices.length * 3);\r\n            }\r\n\r\n            const wt = this.proj.world.mat3;\r\n\r\n            const vertexData2d = this.vertexData2d;\r\n            const vertexData = thisAny.vertexData;\r\n\r\n            for (let i = 0; i < vertexData.length / 2; i++)\r\n            {\r\n                const x = vertices[(i * 2)];\r\n                const y = vertices[(i * 2) + 1];\r\n\r\n                const xx = (wt[0] * x) + (wt[3] * y) + wt[6];\r\n                const yy = (wt[1] * x) + (wt[4] * y) + wt[7];\r\n                const ww = (wt[2] * x) + (wt[5] * y) + wt[8];\r\n\r\n                vertexData2d[i * 3] = xx;\r\n                vertexData2d[i * 3 + 1] = yy;\r\n                vertexData2d[i * 3 + 2] = ww;\r\n\r\n                vertexData[(i * 2)] = xx / ww;\r\n                vertexData[(i * 2) + 1] = yy / ww;\r\n            }\r\n\r\n            thisAny.vertexDirty = geometry.vertexDirtyId;\r\n        }\r\n\r\n        _renderDefault(renderer: PIXI.Renderer) {\r\n            const shader = this.shader as PIXI.MeshMaterial;\r\n\r\n            shader.alpha = this.worldAlpha;\r\n            if (shader.update)\r\n            {\r\n                shader.update();\r\n            }\r\n\r\n            renderer.batch.flush();\r\n\r\n            if ((shader as any).program.uniformData.translationMatrix)\r\n            {\r\n                shader.uniforms.translationMatrix = this.worldTransform.toArray(true);\r\n            }\r\n\r\n            // bind and sync uniforms..\r\n            renderer.shader.bind(shader, false);\r\n\r\n            // set state..\r\n            renderer.state.set(this.state);\r\n\r\n            // bind the geometry...\r\n            renderer.geometry.bind(this.geometry, shader);\r\n\r\n            // then render it\r\n            renderer.geometry.draw(this.drawMode, this.size, this.start, (this.geometry as any).instanceCount);\r\n        }\r\n\r\n        toLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n                                       point?: T, skipUpdate?: boolean,\r\n                                       step = TRANSFORM_STEP.ALL): T {\r\n            return container2dToLocal.call(this, position, from, point, skipUpdate, step);\r\n        }\r\n\r\n        get worldTransform() {\r\n            return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n    }\r\n\r\n\texport class SimpleMesh2d extends Mesh2d {\r\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array,\r\n\t\t            indices?: Uint16Array, drawMode?: number) {\r\n            super(new PIXI.MeshGeometry(vertices, uvs, indices),\r\n                new PIXI.MeshMaterial(texture, {\r\n                    program: PIXI.Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\r\n                    pluginName: 'batch2d'\r\n                }),\r\n                null,\r\n                drawMode);\r\n\r\n            (this.geometry.getBuffer('aVertexPosition') as any).static = false;\r\n\t\t}\r\n\r\n\t\tautoUpdate = true;\r\n\r\n        get vertices()\r\n        {\r\n            return this.geometry.getBuffer('aVertexPosition').data as Float32Array;\r\n        }\r\n        set vertices(value)\r\n        {\r\n            this.geometry.getBuffer('aVertexPosition').data = value;\r\n        }\r\n\r\n        protected _render(renderer?: PIXI.Renderer)\r\n        {\r\n            if (this.autoUpdate)\r\n            {\r\n                this.geometry.getBuffer('aVertexPosition').update();\r\n            }\r\n\r\n            (super._render as any)(renderer);\r\n        }\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n    export class Sprite2d extends PIXI.Sprite {\r\n        constructor(texture: PIXI.Texture) {\r\n            super(texture);\r\n            this.proj = new Projection2d(this.transform);\r\n            this.pluginName = 'batch2d';\r\n        }\r\n\r\n        vertexData2d: Float32Array = null;\r\n        proj: Projection2d;\r\n\r\n        _calculateBounds() {\r\n            this.calculateTrimmedVertices();\r\n            this._bounds.addQuad(this.vertexTrimmedData as any);\r\n        }\r\n\r\n        calculateVertices() {\r\n            const texture = this._texture;\r\n\r\n            if (this.proj._affine) {\r\n                this.vertexData2d = null;\r\n                super.calculateVertices();\r\n                return;\r\n            }\r\n            if (!this.vertexData2d) {\r\n                this.vertexData2d = new Float32Array(12);\r\n            }\r\n\r\n            const wid = (this.transform as any)._worldID;\r\n            const tuid = (texture as any)._updateID;\r\n            if (this._transformID === wid && this._textureID === tuid) {\r\n                return;\r\n            }\r\n            // update texture UV here, because base texture can be changed without calling `_onTextureUpdate`\r\n            if (this._textureID !== tuid) {\r\n                (this as any).uvs = (texture as any)._uvs.uvsFloat32;\r\n            }\r\n\r\n            this._transformID = wid;\r\n            this._textureID = tuid;\r\n\r\n            const wt = this.proj.world.mat3;\r\n            const vertexData2d = this.vertexData2d;\r\n            const vertexData = this.vertexData;\r\n            const trim = texture.trim;\r\n            const orig = texture.orig;\r\n            const anchor = this._anchor;\r\n\r\n            let w0 = 0;\r\n            let w1 = 0;\r\n            let h0 = 0;\r\n            let h1 = 0;\r\n\r\n            if (trim) {\r\n                w1 = trim.x - (anchor._x * orig.width);\r\n                w0 = w1 + trim.width;\r\n\r\n                h1 = trim.y - (anchor._y * orig.height);\r\n                h0 = h1 + trim.height;\r\n            } else {\r\n                w1 = -anchor._x * orig.width;\r\n                w0 = w1 + orig.width;\r\n\r\n                h1 = -anchor._y * orig.height;\r\n                h0 = h1 + orig.height;\r\n            }\r\n\r\n            vertexData2d[0] = (wt[0] * w1) + (wt[3] * h1) + wt[6];\r\n            vertexData2d[1] = (wt[1] * w1) + (wt[4] * h1) + wt[7];\r\n            vertexData2d[2] = (wt[2] * w1) + (wt[5] * h1) + wt[8];\r\n\r\n            vertexData2d[3] = (wt[0] * w0) + (wt[3] * h1) + wt[6];\r\n            vertexData2d[4] = (wt[1] * w0) + (wt[4] * h1) + wt[7];\r\n            vertexData2d[5] = (wt[2] * w0) + (wt[5] * h1) + wt[8];\r\n\r\n            vertexData2d[6] = (wt[0] * w0) + (wt[3] * h0) + wt[6];\r\n            vertexData2d[7] = (wt[1] * w0) + (wt[4] * h0) + wt[7];\r\n            vertexData2d[8] = (wt[2] * w0) + (wt[5] * h0) + wt[8];\r\n\r\n            vertexData2d[9] = (wt[0] * w1) + (wt[3] * h0) + wt[6];\r\n            vertexData2d[10] = (wt[1] * w1) + (wt[4] * h0) + wt[7];\r\n            vertexData2d[11] = (wt[2] * w1) + (wt[5] * h0) + wt[8];\r\n\r\n            vertexData[0] = vertexData2d[0] / vertexData2d[2];\r\n            vertexData[1] = vertexData2d[1] / vertexData2d[2];\r\n\r\n            vertexData[2] = vertexData2d[3] / vertexData2d[5];\r\n            vertexData[3] = vertexData2d[4] / vertexData2d[5];\r\n\r\n            vertexData[4] = vertexData2d[6] / vertexData2d[8];\r\n            vertexData[5] = vertexData2d[7] / vertexData2d[8];\r\n\r\n            vertexData[6] = vertexData2d[9] / vertexData2d[11];\r\n            vertexData[7] = vertexData2d[10] / vertexData2d[11];\r\n        }\r\n\r\n        calculateTrimmedVertices() {\r\n            if (this.proj._affine) {\r\n                super.calculateTrimmedVertices();\r\n                return;\r\n            }\r\n\r\n            const wid = (this.transform as any)._worldID;\r\n            const tuid = (this._texture as any)._updateID;\r\n            if (!this.vertexTrimmedData) {\r\n                this.vertexTrimmedData = new Float32Array(8);\r\n            } else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n                return;\r\n            }\r\n\r\n            this._transformTrimmedID = wid;\r\n            this._textureTrimmedID = tuid;\r\n\r\n            // lets do some special trim code!\r\n            const texture = this._texture;\r\n            const vertexData = this.vertexTrimmedData;\r\n            const orig = texture.orig;\r\n            const anchor = this._anchor;\r\n\r\n            // lets calculate the new untrimmed bounds..\r\n            const wt = this.proj.world.mat3;\r\n\r\n            const w1 = -anchor._x * orig.width;\r\n            const w0 = w1 + orig.width;\r\n\r\n            const h1 = -anchor._y * orig.height;\r\n            const h0 = h1 + orig.height;\r\n\r\n            let z = 1.0 / (wt[2] * w1 + wt[5] * h1 + wt[8]);\r\n            vertexData[0] = z * ((wt[0] * w1) + (wt[3] * h1) + wt[6]);\r\n            vertexData[1] = z * ((wt[1] * w1) + (wt[4] * h1) + wt[7]);\r\n\r\n            z = 1.0 / (wt[2] * w0 + wt[5] * h1 + wt[8]);\r\n            vertexData[2] = z * ((wt[0] * w0) + (wt[3] * h1) + wt[6]);\r\n            vertexData[3] = z * ((wt[1] * w0) + (wt[4] * h1) + wt[7]);\r\n\r\n            z = 1.0 / (wt[2] * w0 + wt[5] * h0 + wt[8]);\r\n            vertexData[4] = z * ((wt[0] * w0) + (wt[3] * h0) + wt[6]);\r\n            vertexData[5] = z * ((wt[1] * w0) + (wt[4] * h0) + wt[7]);\r\n\r\n            z = 1.0 / (wt[2] * w1 + wt[5] * h0 + wt[8]);\r\n            vertexData[6] = z * ((wt[0] * w1) + (wt[3] * h0) + wt[6]);\r\n            vertexData[7] = z * ((wt[1] * w1) + (wt[4] * h0) + wt[7]);\r\n        }\r\n\r\n        toLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n                                       point?: T, skipUpdate?: boolean,\r\n                                       step = TRANSFORM_STEP.ALL): T {\r\n            return container2dToLocal.call(this, position, from, point, skipUpdate, step);\r\n        }\r\n\r\n        get worldTransform() {\r\n            return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    export class Text2d extends PIXI.Text {\r\n        constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n            super(text, style, canvas);\r\n            this.proj = new Projection2d(this.transform);\r\n            this.pluginName = 'batch2d';\r\n        }\r\n\r\n        proj: Projection2d;\r\n        vertexData2d: Float32Array = null;\r\n\r\n        get worldTransform() {\r\n\t        return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n    }\r\n\r\n    Text2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n    (Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n\t(Text2d.prototype as any)._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n}\r\n","declare module PIXI {\r\n\tinterface Sprite {\r\n\t    _texture: PIXI.Texture;\r\n        vertexData: Float32Array;\r\n        vertexTrimmedData: Float32Array;\r\n        _transformID?: number;\r\n        _textureID?: number;\r\n        _transformTrimmedID?: number;\r\n        _textureTrimmedID?: number;\r\n        _anchor?: ObservablePoint;\r\n\t\tconvertTo2d?(): void;\r\n\t}\r\n\r\n\tinterface Container {\r\n\t\tconvertTo2d?(): void;\r\n\r\n\t\tconvertSubtreeTo2d?(): void;\r\n\t}\r\n\r\n\tinterface SimpleMesh {\r\n\t\tconvertTo2d?(): void;\r\n\t}\r\n\r\n\tinterface Graphics {\r\n\t\tconvertTo2d?(): void;\r\n\t}\r\n}\r\n\r\nnamespace pixi_projection {\r\n\r\n\tfunction convertTo2d() {\r\n\t\tif (this.proj) return;\r\n\t\tthis.proj = new Projection2d(this.transform);\r\n\t\tthis.toLocal = Container2d.prototype.toLocal;\r\n\t\tObject.defineProperty(this, \"worldTransform\", {\r\n\t\t\tget: container2dWorldTransform,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t(PIXI as any).Container.prototype.convertTo2d = convertTo2d;\r\n\r\n\t(PIXI as any).Sprite.prototype.convertTo2d = function () {\r\n\t\tif (this.proj) return;\r\n\t\tthis.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n\t\tthis.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n\t\tthis._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n\t\tthis.pluginName = 'sprite2d';\r\n\t\tconvertTo2d.call(this);\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertSubtreeTo2d = function () {\r\n\t\tthis.convertTo2d();\r\n\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\tthis.children[i].convertSubtreeTo2d();\r\n\t\t}\r\n\t};\r\n\r\n    if (PIXI.SimpleMesh) {\r\n        (PIXI as any).SimpleMesh.prototype.convertTo2d =\r\n            (PIXI as any).SimpleRope.prototype.convertTo2d =\r\n                function () {\r\n                    if (this.proj) return;\r\n                    this.calculateVertices = Mesh2d.prototype.calculateVertices;\r\n                    this._renderDefault = Mesh2d.prototype._renderDefault;\r\n                    if (this.material.pluginName !== 'batch2d') {\r\n                        this.material = new PIXI.MeshMaterial(this.material.texture, {\r\n                            program: PIXI.Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\r\n                            pluginName: 'batch2d'\r\n                        });\r\n                    }\r\n                    convertTo2d.call(this);\r\n                };\r\n    }\r\n\r\n}\r\n","namespace pixi_projection {\r\n\tconst tempTransform = new PIXI.Transform();\r\n\r\n\texport class TilingSprite2d extends PIXI.TilingSprite {\r\n\t\tconstructor(texture: PIXI.Texture, width: number, height: number) {\r\n\t\t\tsuper(texture, width, height);\r\n\r\n\t\t\tthis.tileProj = new Projection2d(this.tileTransform);\r\n\t\t\tthis.tileProj.reverseLocalOrder = true;\r\n\t\t\tthis.proj = new Projection2d(this.transform);\r\n\r\n\t\t\tthis.pluginName = 'tilingSprite2d';\r\n\t\t\tthis.uvRespectAnchor = true;\r\n\t\t}\r\n\r\n\t\ttileProj: Projection2d;\r\n\t\tproj: Projection2d;\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n\t\t}\r\n\r\n\t\ttoLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n\t\t                                  point?: T, skipUpdate?: boolean,\r\n\t\t                                  step = TRANSFORM_STEP.ALL): T {\r\n\t\t\treturn container2dToLocal.call(this, position, from, point, skipUpdate, step);\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer)\r\n\t\t{\r\n\t\t\t// tweak our texture temporarily..\r\n\t\t\tconst texture = this._texture;\r\n\r\n\t\t\tif (!texture || !texture.valid)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// changed\r\n\t\t\tthis.tileTransform.updateTransform(tempTransform);\r\n\t\t\tthis.uvMatrix.update();\r\n\r\n\t\t\trenderer.batch.setObjectRenderer((renderer.plugins as any)[this.pluginName]);\r\n            (renderer.plugins as any)[this.pluginName].render(this);\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\tlet shaderVert =\r\n\t\t`attribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform mat3 uTransform;\r\n\r\nvarying vec3 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);\r\n\r\n    vTextureCoord = uTransform * vec3(aTextureCoord, 1.0);\r\n}\r\n`;\r\n\tlet shaderFrag = `\r\nvarying vec3 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\nuniform vec4 uColor;\r\nuniform mat3 uMapCoord;\r\nuniform vec4 uClampFrame;\r\nuniform vec2 uClampOffset;\r\n\r\nvoid main(void)\r\n{\r\n    vec2 coord = mod(vTextureCoord.xy / vTextureCoord.z - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\r\n    coord = (uMapCoord * vec3(coord, 1.0)).xy;\r\n    coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\r\n\r\n    vec4 sample = texture2D(uSampler, coord);\r\n    gl_FragColor = sample * uColor;\r\n}\r\n`;\r\n\tlet shaderSimpleFrag = `\r\n\tvarying vec3 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\nuniform vec4 uColor;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 sample = texture2D(uSampler, vTextureCoord.xy / vTextureCoord.z);\r\n    gl_FragColor = sample * uColor;\r\n}\r\n`;\r\n\r\n\t// changed\r\n\tconst tempMat = new Matrix2d();\r\n\r\n\timport WRAP_MODES = PIXI.WRAP_MODES;\r\n\timport utils = PIXI.utils;\r\n\r\n    export class TilingSprite2dRenderer extends PIXI.ObjectRenderer\r\n    {\r\n        constructor(renderer: PIXI.Renderer)\r\n        {\r\n            super(renderer);\r\n\r\n            const uniforms = { globals: this.renderer.globalUniforms };\r\n\r\n            this.shader = PIXI.Shader.from(shaderVert, shaderFrag, uniforms);\r\n\r\n            this.simpleShader = PIXI.Shader.from(shaderVert, shaderSimpleFrag, uniforms);\r\n        }\r\n\r\n        shader: PIXI.Shader;\r\n        simpleShader: PIXI.Shader;\r\n        quad = new PIXI.QuadUv();\r\n\r\n        render(ts: any)\r\n        {\r\n            const renderer = this.renderer;\r\n            const quad = this.quad;\r\n\r\n            let vertices = quad.vertices;\r\n\r\n            vertices[0] = vertices[6] = (ts._width) * -ts.anchor.x;\r\n            vertices[1] = vertices[3] = ts._height * -ts.anchor.y;\r\n\r\n            vertices[2] = vertices[4] = (ts._width) * (1.0 - ts.anchor.x);\r\n            vertices[5] = vertices[7] = ts._height * (1.0 - ts.anchor.y);\r\n\r\n            if (ts.uvRespectAnchor)\r\n            {\r\n                vertices = quad.uvs;\r\n\r\n                vertices[0] = vertices[6] = -ts.anchor.x;\r\n                vertices[1] = vertices[3] = -ts.anchor.y;\r\n\r\n                vertices[2] = vertices[4] = 1.0 - ts.anchor.x;\r\n                vertices[5] = vertices[7] = 1.0 - ts.anchor.y;\r\n            }\r\n\r\n            quad.invalidate();\r\n\r\n            const tex = ts._texture;\r\n            const baseTex = tex.baseTexture;\r\n            const lt = ts.tileProj.world;\r\n            const uv = ts.uvMatrix;\r\n            let isSimple = baseTex.isPowerOfTwo\r\n                && tex.frame.width === baseTex.width && tex.frame.height === baseTex.height;\r\n\r\n            // auto, force repeat wrapMode for big tiling textures\r\n            if (isSimple)\r\n            {\r\n                if (!baseTex._glTextures[(renderer as any).CONTEXT_UID])\r\n                {\r\n                    if (baseTex.wrapMode === WRAP_MODES.CLAMP)\r\n                    {\r\n                        baseTex.wrapMode = WRAP_MODES.REPEAT;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    isSimple = baseTex.wrapMode !== WRAP_MODES.CLAMP;\r\n                }\r\n            }\r\n\r\n            const shader = isSimple ? this.simpleShader : this.shader;\r\n\r\n            // changed\r\n            tempMat.identity();\r\n            tempMat.scale(tex.width, tex.height);\r\n            tempMat.prepend(lt);\r\n            tempMat.scale(1.0 / ts._width, 1.0 / ts._height);\r\n\r\n            tempMat.invert();\r\n            if (isSimple)\r\n            {\r\n                tempMat.prepend(uv.mapCoord);\r\n            }\r\n            else\r\n            {\r\n                shader.uniforms.uMapCoord = uv.mapCoord.toArray(true);\r\n                shader.uniforms.uClampFrame = uv.uClampFrame;\r\n                shader.uniforms.uClampOffset = uv.uClampOffset;\r\n            }\r\n\r\n            shader.uniforms.uTransform = tempMat.toArray(true);\r\n            shader.uniforms.uColor = utils.premultiplyTintToRgba(ts.tint, ts.worldAlpha,\r\n                shader.uniforms.uColor, baseTex.premultiplyAlpha);\r\n            shader.uniforms.translationMatrix = ts.transform.worldTransform.toArray(true);\r\n            shader.uniforms.uSampler = tex;\r\n\r\n            renderer.shader.bind(shader, false);\r\n            renderer.geometry.bind(quad as any, undefined);// , renderer.shader.getGLShader());\r\n\r\n            renderer.state.setBlendMode(utils.correctBlendMode(ts.blendMode, baseTex.premultiplyAlpha));\r\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, 6, 0);\r\n        }\r\n    }\r\n\r\n\tPIXI.Renderer.registerPlugin('tilingSprite2d', TilingSprite2dRenderer as any);\r\n}\r\n","namespace pixi_projection {\r\n    PIXI.systems.MaskSystem.prototype.pushSpriteMask =  function(target: any, maskData: PIXI.Sprite): void {\r\n\t\tlet alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\r\n\r\n\t\tif (!alphaMaskFilter) {\r\n\t\t\talphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter2d(maskData)];\r\n\t\t}\r\n\r\n\t\talphaMaskFilter[0].resolution = this.renderer.resolution;\r\n\t\talphaMaskFilter[0].maskSprite = maskData;\r\n\r\n\t\t// TODO - may cause issues!\r\n\t\ttarget.filterArea = maskData.getBounds(true);\r\n\r\n\t\tthis.renderer.filter.push(target, alphaMaskFilter);\r\n\r\n\t\tthis.alphaMaskIndex++;\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\tconst spriteMaskVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 otherMatrix;\r\n\r\nvarying vec3 vMaskCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n\tgl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\n\tvTextureCoord = aTextureCoord;\r\n\tvMaskCoord = otherMatrix * vec3( aTextureCoord, 1.0);\r\n}\r\n`;\r\n\tconst spriteMaskFrag = `\r\nvarying vec3 vMaskCoord;\r\nvarying vec2 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D mask;\r\nuniform float alpha;\r\nuniform vec4 maskClamp;\r\n\r\nvoid main(void)\r\n{\r\n    vec2 uv = vMaskCoord.xy / vMaskCoord.z;\r\n    \r\n    float clip = step(3.5,\r\n        step(maskClamp.x, uv.x) +\r\n        step(maskClamp.y, uv.y) +\r\n        step(uv.x, maskClamp.z) +\r\n        step(uv.y, maskClamp.w));\r\n\r\n    vec4 original = texture2D(uSampler, vTextureCoord);\r\n    vec4 masky = texture2D(mask, uv);\r\n    \r\n    original *= (masky.r * masky.a * alpha * clip);\r\n\r\n    gl_FragColor = original;\r\n}\r\n`;\r\n\r\n\tconst tempMat = new Matrix2d();\r\n\r\n\texport class SpriteMaskFilter2d extends PIXI.Filter {\r\n\t\tconstructor(sprite: PIXI.Sprite) {\r\n\t\t\tsuper(spriteMaskVert, spriteMaskFrag);\r\n\r\n\t\t\tsprite.renderable = false;\r\n\r\n\t\t\tthis.maskSprite = sprite;\r\n\t\t}\r\n\r\n\t\tmaskSprite: PIXI.Sprite;\r\n\t\tmaskMatrix = new Matrix2d();\r\n\r\n\t\tapply(filterManager: PIXI.systems.FilterSystem, input: PIXI.RenderTexture, output: PIXI.RenderTexture,\r\n\t\t      clear?: boolean) {\r\n\t\t\tconst maskSprite = this.maskSprite;\r\n\t\t\tconst tex = this.maskSprite.texture;\r\n\r\n\t\t\tif (!tex.valid)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!tex.uvMatrix)\r\n\t\t\t{\r\n\t\t\t\t// margin = 0.0, let it bleed a bit, shader code becomes easier\r\n\t\t\t\t// assuming that atlas textures were made with 1-pixel padding\r\n\t\t\t\ttex.uvMatrix = new PIXI.TextureMatrix(tex, 0.0);\r\n\t\t\t}\r\n\t\t\ttex.uvMatrix.update();\r\n\r\n\t\t\tthis.uniforms.mask = maskSprite.texture;\r\n\t\t\tthis.uniforms.otherMatrix = SpriteMaskFilter2d.calculateSpriteMatrix(input, this.maskMatrix, maskSprite)\r\n\t\t\t\t.prepend((tex.uvMatrix as any).mapCoord);\r\n\t\t\tthis.uniforms.alpha = maskSprite.worldAlpha;\r\n\t\t\tthis.uniforms.maskClamp = (tex.uvMatrix as any).uClampFrame;\r\n\r\n\t\t\tfilterManager.applyFilter(this, input, output, clear);\r\n\t\t}\r\n\r\n\t\tstatic calculateSpriteMatrix(input: PIXI.RenderTexture, mappedMatrix: Matrix2d, sprite: PIXI.Sprite) {\r\n\t\t\tlet proj = (sprite as any).proj as Projection2d;\r\n\r\n\t\t\tconst filterArea = (input as any).filterFrame;\r\n\r\n\t\t\tconst worldTransform = proj && !proj._affine ? proj.world.copyTo2dOr3d(tempMat) : tempMat.copyFrom(sprite.transform.worldTransform);\r\n\t\t\tconst texture = sprite.texture.orig;\r\n\r\n\t\t\tmappedMatrix.set(input.width, 0, 0, input.height, filterArea.x, filterArea.y);\r\n\t\t\tworldTransform.invert();\r\n\t\t\tmappedMatrix.setToMult(worldTransform, mappedMatrix);\r\n\t\t\tmappedMatrix.scaleAndTranslate(1.0 / texture.width, 1.0 / texture.height,\r\n\t\t\t\tsprite.anchor.x, sprite.anchor.y);\r\n\r\n\t\t\treturn mappedMatrix;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\texport function container3dWorldTransform() {\r\n\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n\t}\r\n\r\n\texport class Container3d extends PIXI.Container {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.proj = new Projection3d(this.transform);\r\n\t\t}\r\n\r\n\t\tproj: Projection3d;\r\n\r\n\t\tisFrontFace(forceUpdate: boolean = false) {\r\n\t\t\tif (forceUpdate) {\r\n\t\t\t\tthis._recursivePostUpdateTransform();\r\n\t\t\t\tthis.displayObjectUpdateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tconst mat = this.proj.world.mat4;\r\n\t\t\tconst dx1 = mat[0] * mat[15] - mat[3] * mat[12];\r\n\t\t\tconst dy1 = mat[1] * mat[15] - mat[3] * mat[13];\r\n\t\t\tconst dx2 = mat[4] * mat[15] - mat[7] * mat[12];\r\n\t\t\tconst dy2 = mat[5] * mat[15] - mat[7] * mat[13];\r\n\r\n\t\t\treturn dx1 * dy2 - dx2 * dy1 > 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * returns depth from 0 to 1\r\n\t\t *\r\n\t\t * @param {boolean} forceUpdate whether to force matrix updates\r\n\t\t * @returns {number} depth\r\n\t\t */\r\n\t\tgetDepth(forceUpdate: boolean = false) {\r\n\t\t\tif (forceUpdate) {\r\n\t\t\t\tthis._recursivePostUpdateTransform();\r\n\t\t\t\tthis.displayObjectUpdateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tconst mat4 = this.proj.world.mat4;\r\n\t\t\treturn mat4[14] / mat4[15];\r\n\t\t}\r\n\r\n\t\ttoLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n\t\t        point?: T, skipUpdate?: boolean,\r\n\t\t        step = TRANSFORM_STEP.ALL): T {\r\n\r\n\t\t\tif (from)\r\n\t\t\t{\r\n\t\t\t\tposition = from.toGlobal(position, point, skipUpdate);\r\n\t\t\t}\r\n\r\n\t\t\tif (!skipUpdate)\r\n\t\t\t{\r\n\t\t\t\tthis._recursivePostUpdateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tif (step === TRANSFORM_STEP.ALL) {\r\n\t\t\t\tif (!skipUpdate) {\r\n\t\t\t\t\tthis.displayObjectUpdateTransform();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.proj.affine) {\r\n\t\t\t\t\treturn this.transform.worldTransform.applyInverse(position, point) as any;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.proj.world.applyInverse(position, point) as any;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tpoint  = this.parent.worldTransform.applyInverse(position, point) as any;\r\n\t\t\t} else {\r\n\t\t\t\tpoint.copyFrom(position);\r\n\t\t\t}\r\n\t\t\tif (step === TRANSFORM_STEP.NONE) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\tpoint = this.transform.localTransform.applyInverse(point, point) as any;\r\n\t\t\tif (step === TRANSFORM_STEP.PROJ && this.proj.cameraMode) {\r\n\t\t\t\tpoint = this.proj.cameraMatrix.applyInverse(point, point) as any;\r\n\t\t\t}\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n\t\t}\r\n\r\n\t\tget position3d(): PIXI.IPoint {\r\n\t\t\treturn this.proj.position;\r\n\t\t}\r\n\t\tget scale3d(): PIXI.IPoint {\r\n\t\t\treturn this.proj.scale;\r\n\t\t}\r\n\t\tget euler(): IEuler {\r\n\t\t\treturn this.proj.euler;\r\n\t\t}\r\n\t\tget pivot3d(): PIXI.IPoint {\r\n\t\t\treturn this.proj.pivot;\r\n\t\t}\r\n\t\tset position3d(value: PIXI.IPoint) {\r\n\t\t\tthis.proj.position.copyFrom(value);\r\n\t\t}\r\n\t\tset scale3d(value: PIXI.IPoint) {\r\n\t\t\tthis.proj.scale.copyFrom(value);\r\n\t\t}\r\n\t\tset euler(value: IEuler) {\r\n\t\t\tthis.proj.euler.copyFrom(value);\r\n\t\t}\r\n\t\tset pivot3d(value: PIXI.IPoint) {\r\n\t\t\tthis.proj.pivot.copyFrom(value);\r\n\t\t}\r\n\t}\r\n\r\n\texport let container3dToLocal = Container3d.prototype.toLocal;\r\n\texport let container3dGetDepth = Container3d.prototype.getDepth;\r\n\texport let container3dIsFrontFace = Container3d.prototype.isFrontFace;\r\n}\r\n","///<reference path=\"./Container3d.ts\"/>\r\nnamespace pixi_projection {\r\n\texport class Camera3d extends Container3d {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t\tthis.proj.cameraMode = true;\r\n\t\t\tthis.setPlanes(400, 10, 10000, false);\r\n\t\t}\r\n\r\n\t\t_far: number = 0;\r\n\t\t_near: number = 0;\r\n\t\t_focus: number = 0;\r\n\t\t_orthographic: boolean = false;\r\n\r\n\t\tget far() {\r\n\t\t\treturn this._far;\r\n\t\t}\r\n\r\n\t\tget near() {\r\n\t\t\treturn this._near;\r\n\t\t}\r\n\r\n\t\tget focus() {\r\n\t\t\treturn this._focus;\r\n\t\t}\r\n\r\n\t\tget ortographic() {\r\n\t\t\treturn this._orthographic;\r\n\t\t}\r\n\r\n\t\tsetPlanes(focus: number, near: number = 10, far: number = 10000, orthographic: boolean = false) {\r\n\t\t\tthis._focus = focus;\r\n\t\t\tthis._near = near;\r\n\t\t\tthis._far = far;\r\n\t\t\tthis._orthographic = orthographic;\r\n\r\n\t\t\tconst proj = this.proj;\r\n\t\t\tconst mat4 = proj.cameraMatrix.mat4;\r\n\r\n\t\t\tproj._projID++;\r\n\r\n\t\t\tmat4[10] = 1.0 / (far - near);\r\n\t\t\tmat4[14] = (focus - near) / (far - near);\r\n\t\t\tif (this._orthographic) {\r\n\t\t\t\tmat4[11] = 0;\r\n\t\t\t} else {\r\n\t\t\t\tmat4[11] = 1.0 / focus;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\t/**\r\n\t * The Euler angles, order is YZX. Except for projections (camera.lookEuler), its reversed XZY\r\n\t * @class\r\n\t * @namespace PIXI.projection\r\n\t * @param x pitch\r\n\t * @param y yaw\r\n\t * @param z roll\r\n\t * @constructor\r\n\t */\r\n\r\n\texport class Euler {\r\n\t\tconstructor(x?: number, y?: number, z?: number) {\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._x = x || 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._y = y || 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._z = z || 0;\r\n\r\n\t\t\tthis.quaternion = new Float64Array(4);\r\n\t\t\tthis.quaternion[3] = 1;\r\n\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\t_quatUpdateId = -1;\r\n\t\t_quatDirtyId = 0;\r\n\r\n\t\tquaternion: Float64Array;\r\n\r\n\t\t_x: number;\r\n\t\t_y: number;\r\n\t\t_z: number;\r\n\t\t_sign: number = 1;\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value: number) {\r\n\t\t\tif (this._x !== value) {\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value: number) {\r\n\t\t\tif (this._y !== value) {\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value: number) {\r\n\t\t\tif (this._z !== value) {\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget pitch() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset pitch(value: number) {\r\n\t\t\tif (this._x !== value) {\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget yaw() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset yaw(value: number) {\r\n\t\t\tif (this._y !== value) {\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget roll() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset roll(value: number) {\r\n\t\t\tif (this._z !== value) {\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(x?: number, y?: number, z?: number) {\r\n\t\t\tconst _x = x || 0;\r\n\t\t\tconst _y = y || 0;\r\n\t\t\tconst _z = z || 0;\r\n\t\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\r\n\t\t\t\tthis._x = _x;\r\n\t\t\t\tthis._y = _y;\r\n\t\t\t\tthis._z = _z;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcopyFrom(euler: IEuler) {\r\n\t\t\tconst _x = euler.x;\r\n\t\t\tconst _y = euler.y;\r\n\t\t\tconst _z = euler.z;\r\n\t\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\r\n\t\t\t\tthis._x = _x;\r\n\t\t\t\tthis._y = _y;\r\n\t\t\t\tthis._z = _z;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopyTo(p: IEuler) {\r\n\t\t\tp.set(this._x, this._y, this._z);\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tequals(euler: IEuler) {\r\n\t\t\treturn this._x === euler.x\r\n\t\t\t\t&& this._y === euler.y\r\n\t\t\t\t&& this._z === euler.z;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Euler(this._x, this._y, this._z);\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tif (this._quatUpdateId === this._quatDirtyId) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis._quatUpdateId = this._quatDirtyId;\r\n\r\n\t\t\tconst c1 = Math.cos(this._x / 2);\r\n\t\t\tconst c2 = Math.cos(this._y / 2);\r\n\t\t\tconst c3 = Math.cos(this._z / 2);\r\n\r\n\t\t\tconst s = this._sign;\r\n\t\t\tconst s1 = s * Math.sin(this._x / 2);\r\n\t\t\tconst s2 = s * Math.sin(this._y / 2);\r\n\t\t\tconst s3 = s * Math.sin(this._z / 2);\r\n\r\n\t\t\tconst q = this.quaternion;\r\n\r\n\t\t\tq[0] = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tq[1] = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tq[2] = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tq[3] = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}\r\n","// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\r\n\r\nnamespace pixi_projection {\r\n\timport IPoint = PIXI.IPoint;\r\n\r\n\tconst mat4id = [1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1];\r\n\r\n\r\n\texport class Matrix3d {\r\n\t\t/**\r\n\t\t * A default (identity) matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly IDENTITY = new Matrix3d();\r\n\r\n\t\t/**\r\n\t\t * A temp matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly TEMP_MATRIX = new Matrix3d();\r\n\r\n\t\t/**\r\n\t\t * mat4 implementation through array of 16 elements\r\n\t\t */\r\n\t\tmat4: Float64Array;\r\n\r\n\t\tfloatArray: Float32Array = null;\r\n\r\n\t\t_dirtyId: number = 0;\r\n\t\t_updateId: number = -1;\r\n\t\t_mat4inv: Float64Array = null;\r\n\t\tcacheInverse: boolean = false;\r\n\r\n\t\tconstructor(backingArray?: ArrayLike<number>) {\r\n\t\t\tthis.mat4 = new Float64Array(backingArray || mat4id);\r\n\t\t}\r\n\r\n\t\tget a() {\r\n\t\t\treturn this.mat4[0] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tget b() {\r\n\t\t\treturn this.mat4[1] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tget c() {\r\n\t\t\treturn this.mat4[4] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tget d() {\r\n\t\t\treturn this.mat4[5] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tget tx() {\r\n\t\t\treturn this.mat4[12] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tget ty() {\r\n\t\t\treturn this.mat4[13] / this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset a(value: number) {\r\n\t\t\tthis.mat4[0] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset b(value: number) {\r\n\t\t\tthis.mat4[1] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset c(value: number) {\r\n\t\t\tthis.mat4[4] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset d(value: number) {\r\n\t\t\tthis.mat4[5] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset tx(value: number) {\r\n\t\t\tthis.mat4[12] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset ty(value: number) {\r\n\t\t\tthis.mat4[13] = value * this.mat4[15];\r\n\t\t}\r\n\r\n\t\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\r\n\t\t\tlet mat4 = this.mat4;\r\n\t\t\tmat4[0] = a;\r\n\t\t\tmat4[1] = b;\r\n\t\t\tmat4[2] = 0;\r\n\t\t\tmat4[3] = 0;\r\n\t\t\tmat4[4] = c;\r\n\t\t\tmat4[5] = d;\r\n\t\t\tmat4[6] = 0;\r\n\t\t\tmat4[7] = 0;\r\n\t\t\tmat4[8] = 0;\r\n\t\t\tmat4[9] = 0;\r\n\t\t\tmat4[10] = 1;\r\n\t\t\tmat4[11] = 0;\r\n\t\t\tmat4[12] = tx;\r\n\t\t\tmat4[13] = ty;\r\n\t\t\tmat4[14] = 0;\r\n\t\t\tmat4[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\r\n\t\t\tif (!this.floatArray) {\r\n\t\t\t\tthis.floatArray = new Float32Array(9);\r\n\t\t\t}\r\n\r\n\t\t\tconst array = out || this.floatArray;\r\n\t\t\tconst mat3 = this.mat4;\r\n\r\n\t\t\tif (transpose) {\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[1];\r\n\t\t\t\tarray[2] = mat3[3];\r\n\t\t\t\tarray[3] = mat3[4];\r\n\t\t\t\tarray[4] = mat3[5];\r\n\t\t\t\tarray[5] = mat3[7];\r\n\t\t\t\tarray[6] = mat3[12];\r\n\t\t\t\tarray[7] = mat3[13];\r\n\t\t\t\tarray[8] = mat3[15];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//this branch is NEVER USED in pixi\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[4];\r\n\t\t\t\tarray[2] = mat3[12];\r\n\t\t\t\tarray[3] = mat3[2];\r\n\t\t\t\tarray[4] = mat3[6];\r\n\t\t\t\tarray[5] = mat3[13];\r\n\t\t\t\tarray[6] = mat3[3];\r\n\t\t\t\tarray[7] = mat3[7];\r\n\t\t\t\tarray[8] = mat3[15];\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\tsetToTranslation(tx: number, ty: number, tz: number) {\r\n\t\t\tconst mat4 = this.mat4;\r\n\r\n\t\t\tmat4[0] = 1;\r\n\t\t\tmat4[1] = 0;\r\n\t\t\tmat4[2] = 0;\r\n\t\t\tmat4[3] = 0;\r\n\r\n\t\t\tmat4[4] = 0;\r\n\t\t\tmat4[5] = 1;\r\n\t\t\tmat4[6] = 0;\r\n\t\t\tmat4[7] = 0;\r\n\r\n\t\t\tmat4[8] = 0;\r\n\t\t\tmat4[9] = 0;\r\n\t\t\tmat4[10] = 1;\r\n\t\t\tmat4[11] = 0;\r\n\r\n\t\t\tmat4[12] = tx;\r\n\t\t\tmat4[13] = ty;\r\n\t\t\tmat4[14] = tz;\r\n\t\t\tmat4[15] = 1;\r\n\t\t}\r\n\r\n\t\tsetToRotationTranslationScale(quat: Float64Array, tx: number, ty: number, tz: number, sx: number, sy: number, sz: number) {\r\n\t\t\tconst out = this.mat4;\r\n\r\n\t\t\tlet x = quat[0], y = quat[1], z = quat[2], w = quat[3];\r\n\t\t\tlet x2 = x + x;\r\n\t\t\tlet y2 = y + y;\r\n\t\t\tlet z2 = z + z;\r\n\r\n\t\t\tlet xx = x * x2;\r\n\t\t\tlet xy = x * y2;\r\n\t\t\tlet xz = x * z2;\r\n\t\t\tlet yy = y * y2;\r\n\t\t\tlet yz = y * z2;\r\n\t\t\tlet zz = z * z2;\r\n\t\t\tlet wx = w * x2;\r\n\t\t\tlet wy = w * y2;\r\n\t\t\tlet wz = w * z2;\r\n\r\n\t\t\tout[0] = (1 - (yy + zz)) * sx;\r\n\t\t\tout[1] = (xy + wz) * sx;\r\n\t\t\tout[2] = (xz - wy) * sx;\r\n\t\t\tout[3] = 0;\r\n\t\t\tout[4] = (xy - wz) * sy;\r\n\t\t\tout[5] = (1 - (xx + zz)) * sy;\r\n\t\t\tout[6] = (yz + wx) * sy;\r\n\t\t\tout[7] = 0;\r\n\t\t\tout[8] = (xz + wy) * sz;\r\n\t\t\tout[9] = (yz - wx) * sz;\r\n\t\t\tout[10] = (1 - (xx + yy)) * sz;\r\n\t\t\tout[11] = 0;\r\n\t\t\tout[12] = tx;\r\n\t\t\tout[13] = ty;\r\n\t\t\tout[14] = tz;\r\n\t\t\tout[15] = 1;\r\n\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tapply(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new Point3d();\r\n\r\n\t\t\tconst mat4 = this.mat4;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\t\t\tconst z = pos.z || 0;\r\n\r\n\t\t\t//TODO: apply for 2d point\r\n\r\n\t\t\tlet w = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\r\n\t\t\tnewPos.x = w * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\r\n\t\t\tnewPos.y = w * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\r\n\t\t\tnewPos.z = w * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\r\n\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\ttranslate(tx: number, ty: number, tz: number) {\r\n\t\t\tconst a = this.mat4;\r\n\r\n\t\t\ta[12] = a[0] * tx + a[4] * ty + a[8] * tz + a[12];\r\n\t\t\ta[13] = a[1] * tx + a[5] * ty + a[9] * tz + a[13];\r\n\t\t\ta[14] = a[2] * tx + a[6] * ty + a[10] * tz + a[14];\r\n\t\t\ta[15] = a[3] * tx + a[7] * ty + a[11] * tz + a[15];\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscale(x: number, y: number, z?: number) {\r\n\t\t\tconst mat4 = this.mat4;\r\n\t\t\tmat4[0] *= x;\r\n\t\t\tmat4[1] *= x;\r\n\t\t\tmat4[2] *= x;\r\n\t\t\tmat4[3] *= x;\r\n\r\n\t\t\tmat4[4] *= y;\r\n\t\t\tmat4[5] *= y;\r\n\t\t\tmat4[6] *= y;\r\n\t\t\tmat4[7] *= y;\r\n\r\n\t\t\tif (z !== undefined) {\r\n\t\t\t\tmat4[8] *= z;\r\n\t\t\t\tmat4[9] *= z;\r\n\t\t\t\tmat4[10] *= z;\r\n\t\t\t\tmat4[11] *= z;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tscaleAndTranslate(scaleX: number, scaleY: number, scaleZ: number, tx: number, ty: number, tz: number) {\r\n\t\t\tconst mat4 = this.mat4;\r\n\t\t\tmat4[0] = scaleX * mat4[0] + tx * mat4[3];\r\n\t\t\tmat4[1] = scaleY * mat4[1] + ty * mat4[3];\r\n\t\t\tmat4[2] = scaleZ * mat4[2] + tz * mat4[3];\r\n\r\n\t\t\tmat4[4] = scaleX * mat4[4] + tx * mat4[7];\r\n\t\t\tmat4[5] = scaleY * mat4[5] + ty * mat4[7];\r\n\t\t\tmat4[6] = scaleZ * mat4[6] + tz * mat4[7];\r\n\r\n\t\t\tmat4[8] = scaleX * mat4[8] + tx * mat4[11];\r\n\t\t\tmat4[9] = scaleY * mat4[9] + ty * mat4[11];\r\n\t\t\tmat4[10] = scaleZ * mat4[10] + tz * mat4[11];\r\n\r\n\t\t\tmat4[12] = scaleX * mat4[12] + tx * mat4[15];\r\n\t\t\tmat4[13] = scaleY * mat4[13] + ty * mat4[15];\r\n\t\t\tmat4[14] = scaleZ * mat4[14] + tz * mat4[15];\r\n\t\t}\r\n\r\n\t\t//TODO: remove props\r\n\t\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new Point3d();\r\n\t\t\tif (!this._mat4inv) {\r\n\t\t\t\tthis._mat4inv = new Float64Array(16);\r\n\t\t\t}\r\n\r\n\t\t\tconst mat4 = this._mat4inv;\r\n\t\t\tconst a = this.mat4;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\t\t\tlet z = pos.z || 0;\r\n\r\n\t\t\tif (!this.cacheInverse || this._updateId !== this._dirtyId) {\r\n\t\t\t\tthis._updateId = this._dirtyId;\r\n\t\t\t\tMatrix3d.glMatrixMat4Invert(mat4, a);\r\n\t\t\t}\r\n\r\n\t\t\tlet w1 = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\r\n\t\t\tconst x1 = w1 * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\r\n\t\t\tconst y1 = w1 * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\r\n\t\t\tconst z1 = w1 * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\r\n\r\n\t\t\tz += 1.0;\r\n\r\n\t\t\tlet w2 = 1.0 / (mat4[3] * x + mat4[7] * y + mat4[11] * z + mat4[15]);\r\n\t\t\tconst x2 = w2 * (mat4[0] * x + mat4[4] * y + mat4[8] * z + mat4[12]);\r\n\t\t\tconst y2 = w2 * (mat4[1] * x + mat4[5] * y + mat4[9] * z + mat4[13]);\r\n\t\t\tconst z2 = w2 * (mat4[2] * x + mat4[6] * y + mat4[10] * z + mat4[14]);\r\n\r\n\t\t\tif (Math.abs(z1-z2)<1e-10) {\r\n\t\t\t\tnewPos.set(NaN, NaN, 0);\r\n\t\t\t}\r\n\r\n\t\t\tconst alpha = (0-z1) / (z2-z1);\r\n\t\t\tnewPos.set( (x2-x1)*alpha + x1, (y2-y1)*alpha + y1, 0.0);\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\tinvert(): Matrix3d {\r\n\t\t\tMatrix3d.glMatrixMat4Invert(this.mat4, this.mat4);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tinvertCopyTo(matrix: Matrix3d) {\r\n\t\t\tif (!this._mat4inv) {\r\n\t\t\t\tthis._mat4inv = new Float64Array(16);\r\n\t\t\t}\r\n\r\n\t\t\tconst mat4 = this._mat4inv;\r\n\t\t\tconst a = this.mat4;\r\n\r\n\t\t\tif (!this.cacheInverse || this._updateId !== this._dirtyId) {\r\n\t\t\t\tthis._updateId = this._dirtyId;\r\n\t\t\t\tMatrix3d.glMatrixMat4Invert(mat4, a);\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.mat4.set(mat4);\r\n\t\t}\r\n\r\n\t\tidentity(): Matrix3d {\r\n\t\t\tconst mat3 = this.mat4;\r\n\t\t\tmat3[0] = 1;\r\n\t\t\tmat3[1] = 0;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = 0;\r\n\r\n\t\t\tmat3[4] = 0;\r\n\t\t\tmat3[5] = 1;\r\n\t\t\tmat3[6] = 0;\r\n\t\t\tmat3[7] = 0;\r\n\r\n\t\t\tmat3[8] = 0;\r\n\t\t\tmat3[9] = 0;\r\n\t\t\tmat3[10] = 1;\r\n\t\t\tmat3[11] = 0;\r\n\r\n\t\t\tmat3[12] = 0;\r\n\t\t\tmat3[13] = 0;\r\n\t\t\tmat3[14] = 0;\r\n\t\t\tmat3[15] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Matrix3d(this.mat4);\r\n\t\t}\r\n\r\n\t\tcopyTo3d(matrix: Matrix3d) {\r\n\t\t\tconst mat3 = this.mat4;\r\n\t\t\tconst ar2 = matrix.mat4;\r\n\t\t\tar2[0] = mat3[0];\r\n\t\t\tar2[1] = mat3[1];\r\n\t\t\tar2[2] = mat3[2];\r\n\t\t\tar2[3] = mat3[3];\r\n\t\t\tar2[4] = mat3[4];\r\n\t\t\tar2[5] = mat3[5];\r\n\t\t\tar2[6] = mat3[6];\r\n\t\t\tar2[7] = mat3[7];\r\n\t\t\tar2[8] = mat3[8];\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\r\n\t\tcopyTo2d(matrix: Matrix2d) {\r\n\t\t\tconst mat3 = this.mat4;\r\n\t\t\tconst ar2 = matrix.mat3;\r\n\t\t\tar2[0] = mat3[0];\r\n\t\t\tar2[1] = mat3[1];\r\n\t\t\tar2[2] = mat3[3];\r\n\t\t\tar2[3] = mat3[4];\r\n\t\t\tar2[4] = mat3[5];\r\n\t\t\tar2[5] = mat3[7];\r\n\t\t\tar2[6] = mat3[12];\r\n\t\t\tar2[7] = mat3[13];\r\n\t\t\tar2[8] = mat3[15];\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\r\n\t\tcopyTo2dOr3d(matrix: Matrix2d | Matrix3d) {\r\n\t\t\tif (matrix instanceof Matrix2d) {\r\n\t\t\t\treturn this.copyTo2d(matrix);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.copyTo3d(matrix);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return matrix\r\n\t\t */\r\n        copyTo(matrix: PIXI.Matrix, affine?: AFFINE, preserveOrientation?: boolean) {\r\n\t\t\tconst mat3 = this.mat4;\r\n\t\t\tconst d = 1.0 / mat3[15];\r\n\t\t\tconst tx = mat3[12] * d, ty = mat3[13] * d;\r\n\t\t\tmatrix.a = (mat3[0] - mat3[3] * tx) * d;\r\n\t\t\tmatrix.b = (mat3[1] - mat3[3] * ty) * d;\r\n\t\t\tmatrix.c = (mat3[4] - mat3[7] * tx) * d;\r\n\t\t\tmatrix.d = (mat3[5] - mat3[7] * ty) * d;\r\n\t\t\tmatrix.tx = tx;\r\n\t\t\tmatrix.ty = ty;\r\n\r\n\t\t\tif (affine >= 2) {\r\n\t\t\t\tlet D = matrix.a * matrix.d - matrix.b * matrix.c;\r\n\t\t\t\tif (!preserveOrientation) {\r\n\t\t\t\t\tD = Math.abs(D);\r\n\t\t\t\t}\r\n\t\t\t\tif (affine === AFFINE.POINT) {\r\n\t\t\t\t\tif (D > 0) {\r\n\t\t\t\t\t\tD = 1;\r\n\t\t\t\t\t} else D = -1;\r\n\t\t\t\t\tmatrix.a = D;\r\n\t\t\t\t\tmatrix.b = 0;\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t\tmatrix.d = D;\r\n\t\t\t\t} else if (affine === AFFINE.AXIS_X) {\r\n\t\t\t\t\tD /= Math.sqrt(matrix.b * matrix.b + matrix.d * matrix.d);\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t\tmatrix.d = D;\r\n\t\t\t\t} else if (affine === AFFINE.AXIS_Y) {\r\n\t\t\t\t\tD /= Math.sqrt(matrix.a * matrix.a + matrix.c * matrix.c);\r\n\t\t\t\t\tmatrix.a = D;\r\n\t\t\t\t\tmatrix.c = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return\r\n\t\t */\r\n\t\tcopyFrom(matrix: PIXI.Matrix) {\r\n\t\t\tconst mat3 = this.mat4;\r\n\t\t\tmat3[0] = matrix.a;\r\n\t\t\tmat3[1] = matrix.b;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = 0;\r\n\r\n\t\t\tmat3[4] = matrix.c;\r\n\t\t\tmat3[5] = matrix.d;\r\n\t\t\tmat3[6] = 0;\r\n\t\t\tmat3[7] = 0;\r\n\r\n\t\t\tmat3[8] = 0;\r\n\t\t\tmat3[9] = 0;\r\n\t\t\tmat3[10] = 1;\r\n\t\t\tmat3[11] = 0;\r\n\r\n\t\t\tmat3[12] = matrix.tx;\r\n\t\t\tmat3[13] = matrix.ty;\r\n\t\t\tmat3[14] = 0;\r\n\t\t\tmat3[15] = 1;\r\n\r\n\t\t\tthis._dirtyId++;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetToMultLegacy(pt: PIXI.Matrix, lt: Matrix3d) {\r\n\t\t\tconst out = this.mat4;\r\n\t\t\tconst b = lt.mat4;\r\n\r\n\t\t\tconst a00 = pt.a, a01 = pt.b,\r\n\t\t\t\ta10 = pt.c, a11 = pt.d,\r\n\t\t\t\ta30 = pt.tx, a31 = pt.ty;\r\n\r\n\t\t\tlet b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n\r\n\t\t\tout[0] = b0 * a00 + b1 * a10 + b3 * a30;\r\n\t\t\tout[1] = b0 * a01 + b1 * a11 + b3 * a31;\r\n\t\t\tout[2] = b2;\r\n\t\t\tout[3] = b3;\r\n\r\n\t\t\tb0 = b[4];\r\n\t\t\tb1 = b[5];\r\n\t\t\tb2 = b[6];\r\n\t\t\tb3 = b[7];\r\n\t\t\tout[4] = b0 * a00 + b1 * a10 + b3 * a30;\r\n\t\t\tout[5] = b0 * a01 + b1 * a11 + b3 * a31;\r\n\t\t\tout[6] = b2;\r\n\t\t\tout[7] = b3;\r\n\r\n\t\t\tb0 = b[8];\r\n\t\t\tb1 = b[9];\r\n\t\t\tb2 = b[10];\r\n\t\t\tb3 = b[11];\r\n\t\t\tout[8] = b0 * a00 + b1 * a10 + b3 * a30;\r\n\t\t\tout[9] = b0 * a01 + b1 * a11 + b3 * a31;\r\n\t\t\tout[10] = b2;\r\n\t\t\tout[11] = b3;\r\n\r\n\t\t\tb0 = b[12];\r\n\t\t\tb1 = b[13];\r\n\t\t\tb2 = b[14];\r\n\t\t\tb3 = b[15];\r\n\t\t\tout[12] = b0 * a00 + b1 * a10 + b3 * a30;\r\n\t\t\tout[13] = b0 * a01 + b1 * a11 + b3 * a31;\r\n\t\t\tout[14] = b2;\r\n\t\t\tout[15] = b3;\r\n\r\n\t\t\tthis._dirtyId++;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tsetToMultLegacy2(pt: Matrix3d, lt: PIXI.Matrix) {\r\n\t\t\tconst out = this.mat4;\r\n\t\t\tconst a = pt.mat4;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n\t\t\tconst a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n\r\n\t\t\tconst b00 = lt.a, b01 = lt.b,\r\n\t\t\t\tb10 = lt.c, b11 = lt.d,\r\n\t\t\t\tb30 = lt.tx, b31 = lt.ty;\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11;\r\n\t\t\tout[2] = b00 * a02 + b01 * a12;\r\n\t\t\tout[3] = b00 * a03 + b01 * a13;\r\n\r\n\t\t\tout[4] = b10 * a00 + b11 * a10;\r\n\t\t\tout[5] = b10 * a01 + b11 * a11;\r\n\t\t\tout[6] = b10 * a02 + b11 * a12;\r\n\t\t\tout[7] = b10 * a03 + b11 * a13;\r\n\r\n\t\t\tout[8] = a[8];\r\n\t\t\tout[9] = a[9];\r\n\t\t\tout[10] = a[10];\r\n\t\t\tout[11] = a[11];\r\n\r\n\t\t\tout[12] = b30 * a00 + b31 * a10 + a[12];\r\n\t\t\tout[13] = b30 * a01 + b31 * a11 + a[13];\r\n\t\t\tout[14] = b30 * a02 + b31 * a12 + a[14];\r\n\t\t\tout[15] = b30 * a03 + b31 * a13 + a[15];\r\n\r\n\t\t\tthis._dirtyId++;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// that's transform multiplication we use\r\n\t\tsetToMult(pt: Matrix3d, lt: Matrix3d) {\r\n\t\t\tMatrix3d.glMatrixMat4Multiply(this.mat4, pt.mat4, lt.mat4);\r\n\r\n\t\t\tthis._dirtyId++;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tprepend(lt: any) {\r\n\t\t\tif (lt.mat4) {\r\n\t\t\t\tthis.setToMult(lt, this);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setToMultLegacy(lt, this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic glMatrixMat4Invert(out: Float64Array, a: Float64Array) {\r\n\t\t\tlet a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n\t\t\tlet a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n\t\t\tlet a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n\t\t\tlet a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n\t\t\tlet b00 = a00 * a11 - a01 * a10;\r\n\t\t\tlet b01 = a00 * a12 - a02 * a10;\r\n\t\t\tlet b02 = a00 * a13 - a03 * a10;\r\n\t\t\tlet b03 = a01 * a12 - a02 * a11;\r\n\t\t\tlet b04 = a01 * a13 - a03 * a11;\r\n\t\t\tlet b05 = a02 * a13 - a03 * a12;\r\n\t\t\tlet b06 = a20 * a31 - a21 * a30;\r\n\t\t\tlet b07 = a20 * a32 - a22 * a30;\r\n\t\t\tlet b08 = a20 * a33 - a23 * a30;\r\n\t\t\tlet b09 = a21 * a32 - a22 * a31;\r\n\t\t\tlet b10 = a21 * a33 - a23 * a31;\r\n\t\t\tlet b11 = a22 * a33 - a23 * a32;\r\n\r\n\t\t\t// Calculate the determinant\r\n\t\t\tlet det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n\t\t\tif (!det) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tdet = 1.0 / det;\r\n\r\n\t\t\tout[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n\t\t\tout[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n\t\t\tout[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n\t\t\tout[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n\t\t\tout[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n\t\t\tout[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n\t\t\tout[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n\t\t\tout[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n\t\t\tout[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\t\t\tout[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\t\t\tout[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\t\t\tout[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n\t\t\tout[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n\t\t\tout[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n\t\t\tout[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n\t\t\tout[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tstatic glMatrixMat4Multiply(out: Float64Array, a: Float64Array, b: Float64Array) {\r\n\t\t\tlet a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n\t\t\tlet a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n\t\t\tlet a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n\t\t\tlet a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n\t\t\t// Cache only the current line of the second matrix\r\n\t\t\tlet b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n\t\t\tout[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n\t\t\tout[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n\t\t\tout[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n\t\t\tout[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n\t\t\tb0 = b[4];\r\n\t\t\tb1 = b[5];\r\n\t\t\tb2 = b[6];\r\n\t\t\tb3 = b[7];\r\n\t\t\tout[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n\t\t\tout[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n\t\t\tout[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n\t\t\tout[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n\t\t\tb0 = b[8];\r\n\t\t\tb1 = b[9];\r\n\t\t\tb2 = b[10];\r\n\t\t\tb3 = b[11];\r\n\t\t\tout[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n\t\t\tout[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n\t\t\tout[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n\t\t\tout[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n\t\t\tb0 = b[12];\r\n\t\t\tb1 = b[13];\r\n\t\t\tb2 = b[14];\r\n\t\t\tb3 = b[15];\r\n\t\t\tout[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n\t\t\tout[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n\t\t\tout[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n\t\t\tout[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\t\t\treturn out;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\texport type IEuler = Euler | ObservableEuler;\r\n\r\n\t/**\r\n\t * The Euler angles, order is YZX. Except for projections (camera.lookEuler), its reversed XZY\r\n\t * @class\r\n\t * @namespace PIXI.projection\r\n\t * @param x pitch\r\n\t * @param y yaw\r\n\t * @param z roll\r\n\t * @constructor\r\n\t */\r\n\r\n\texport class ObservableEuler {\r\n\t\tconstructor(public cb: any, public scope: any, x?: number, y?: number, z?: number) {\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._x = x || 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._y = y || 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis._z = z || 0;\r\n\r\n\t\t\tthis.quaternion = new Float64Array(4);\r\n\t\t\tthis.quaternion[3] = 1;\r\n\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\t_quatUpdateId = -1;\r\n\t\t_quatDirtyId = 0;\r\n\r\n\t\tquaternion: Float64Array;\r\n\r\n\t\t_x: number;\r\n\t\t_y: number;\r\n\t\t_z: number;\r\n\t\t_sign: number = 1;\r\n\r\n\t\tget x() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset x(value: number) {\r\n\t\t\tif (this._x !== value) {\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget y() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset y(value: number) {\r\n\t\t\tif (this._y !== value) {\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value: number) {\r\n\t\t\tif (this._z !== value) {\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget pitch() {\r\n\t\t\treturn this._x;\r\n\t\t}\r\n\r\n\t\tset pitch(value: number) {\r\n\t\t\tif (this._x !== value) {\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget yaw() {\r\n\t\t\treturn this._y;\r\n\t\t}\r\n\r\n\t\tset yaw(value: number) {\r\n\t\t\tif (this._y !== value) {\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tget roll() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset roll(value: number) {\r\n\t\t\tif (this._z !== value) {\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(x?: number, y?: number, z?: number) {\r\n\t\t\tconst _x = x || 0;\r\n\t\t\tconst _y = y || 0;\r\n\t\t\tconst _z = z || 0;\r\n\t\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\r\n\t\t\t\tthis._x = _x;\r\n\t\t\t\tthis._y = _y;\r\n\t\t\t\tthis._z = _z;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcopyFrom(euler: IEuler) {\r\n\t\t\tconst _x = euler.x;\r\n\t\t\tconst _y = euler.y;\r\n\t\t\tconst _z = euler.z;\r\n\t\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\r\n\t\t\t\tthis._x = _x;\r\n\t\t\t\tthis._y = _y;\r\n\t\t\t\tthis._z = _z;\r\n\t\t\t\tthis._quatDirtyId++;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopyTo(p: IEuler) {\r\n\t\t\tp.set(this._x, this._y, this._z);\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tequals(euler: IEuler) {\r\n\t\t\treturn this._x === euler.x\r\n\t\t\t\t&& this._y === euler.y\r\n\t\t\t\t&& this._z === euler.z;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Euler(this._x, this._y, this._z);\r\n\t\t}\r\n\r\n\t\tupdate() {\r\n\t\t\tif (this._quatUpdateId === this._quatDirtyId) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis._quatUpdateId = this._quatDirtyId;\r\n\r\n\t\t\tconst c1 = Math.cos(this._x / 2);\r\n\t\t\tconst c2 = Math.cos(this._y / 2);\r\n\t\t\tconst c3 = Math.cos(this._z / 2);\r\n\r\n\t\t\tconst s = this._sign;\r\n\t\t\tconst s1 = s * Math.sin(this._x / 2);\r\n\t\t\tconst s2 = s * Math.sin(this._y / 2);\r\n\t\t\tconst s3 = s * Math.sin(this._z / 2);\r\n\r\n\t\t\tconst q = this.quaternion;\r\n\r\n\t\t\tq[0] = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tq[1] = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tq[2] = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tq[3] = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}\r\n","declare namespace PIXI {\r\n\texport interface Point {\r\n\t\tz?: number;\r\n\t\tset(x?: number, y?: number, z?: number): void;\r\n\t}\r\n\r\n\texport interface ObservablePoint {\r\n\t\t_z?: number;\r\n\t\tz: number;\r\n\t\tcb?: any;\r\n        scope?: any;\r\n\t\tset(x?: number, y?: number, z?: number): void;\r\n\t}\r\n}\r\n\r\nnamespace pixi_projection {\r\n\tPIXI.ObservablePoint.prototype.copy = function (point?: PIXI.Point) {\r\n\r\n\t};\r\n\r\n\texport class Point3d extends PIXI.Point {\r\n\t\tconstructor(x?: number, y?: number, z?: number) {\r\n\t\t\tsuper(x, y);\r\n\t\t\tthis.z = z;\r\n\t\t}\r\n\r\n\t\tset(x?: number, y?: number, z?: number) {\r\n\t\t\tthis.x = x || 0;\r\n\t\t\tthis.y = (y === undefined) ? this.x : (y || 0);\r\n\t\t\tthis.z = (y === undefined) ? this.x : (z || 0);\r\n\t\t}\r\n\r\n\t\tcopyFrom(p: PIXI.IPoint) {\r\n\t\t\tthis.set(p.x, p.y, p.z || 0);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyTo(p: PIXI.Point) {\r\n\t\t\tp.set(this.x, this.y, this.z);\r\n\t\t\treturn p;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ObservablePoint3d extends PIXI.ObservablePoint {\r\n\t\t_z: number = 0;\r\n\r\n\t\tget z() {\r\n\t\t\treturn this._z;\r\n\t\t}\r\n\r\n\t\tset z(value) {\r\n\t\t\tif (this._z !== value) {\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tset(x?: number, y?: number, z?: number) {\r\n\t\t\tconst _x = x || 0;\r\n\t\t\tconst _y = (y === undefined) ? _x : (y || 0);\r\n\t\t\tconst _z = (y === undefined) ? _x : (z || 0);\r\n\r\n\t\t\tif (this._x !== _x || this._y !== _y || this._z !== _z) {\r\n\t\t\t\tthis._x = _x;\r\n\t\t\t\tthis._y = _y;\r\n\t\t\t\tthis._z = _z;\r\n\t\t\t\tthis.cb.call(this.scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcopyFrom(p: PIXI.IPoint) {\r\n\t\t\tthis.set(p.x, p.y, p.z || 0);\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tcopyTo(p: PIXI.IPoint) {\r\n\t\t\tp.set(this._x, this._y, this._z);\r\n\t\t\treturn p;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n\tconst tempMat = new Matrix3d();\r\n\r\n\texport class Projection3d extends LinearProjection<Matrix3d> {\r\n\r\n\t\tconstructor(legacy: PIXI.Transform, enable?: boolean) {\r\n\t\t\tsuper(legacy, enable);\r\n\t\t\tthis.local = new Matrix3d();\r\n\t\t\tthis.world = new Matrix3d();\r\n\r\n\t\t\tthis.local.cacheInverse = true;\r\n\t\t\tthis.world.cacheInverse = true;\r\n\r\n\t\t\tthis.position._z = 0;\r\n\t\t\tthis.scale._z = 1;\r\n\t\t\tthis.pivot._z = 0;\r\n\t\t}\r\n\r\n\t\tcameraMatrix: Matrix3d = null;\r\n\r\n\t\t_cameraMode = false;\r\n\r\n\t\tget cameraMode() {\r\n\t\t\treturn this._cameraMode;\r\n\t\t}\r\n\r\n\t\tset cameraMode(value: boolean) {\r\n\t\t\tif (this._cameraMode === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._cameraMode = value;\r\n\r\n\t\t\tthis.euler._sign = this._cameraMode ? -1 : 1;\r\n\t\t\tthis.euler._quatDirtyId++;\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.cameraMatrix = new Matrix3d();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tposition = new ObservablePoint3d(this.onChange, this, 0, 0);\r\n\t\tscale = new ObservablePoint3d(this.onChange, this, 1, 1);\r\n\t\teuler = new ObservableEuler(this.onChange, this, 0, 0, 0);\r\n\t\tpivot = new ObservablePoint3d(this.onChange, this, 0, 0);\r\n\r\n\t\tonChange() {\r\n\t\t\tthis._projID++;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tif (this.cameraMatrix) {\r\n\t\t\t\tthis.cameraMatrix.identity();\r\n\t\t\t}\r\n\t\t\tthis.position.set(0, 0, 0);\r\n\t\t\tthis.scale.set(1, 1, 1);\r\n\t\t\tthis.euler.set(0, 0, 0);\r\n\t\t\tthis.pivot.set(0, 0, 0);\r\n\t\t\tsuper.clear();\r\n\t\t}\r\n\r\n\t\tupdateLocalTransform(lt: PIXI.Matrix) {\r\n\t\t\tif (this._projID === 0) {\r\n\t\t\t\tthis.local.copyFrom(lt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst matrix = this.local;\r\n\t\t\tconst euler = this.euler;\r\n\t\t\tconst pos = this.position;\r\n\t\t\tconst scale = this.scale;\r\n\t\t\tconst pivot = this.pivot;\r\n\r\n\t\t\teuler.update();\r\n\r\n\t\t\tif (!this.cameraMode) {\r\n\t\t\t\tmatrix.setToRotationTranslationScale(euler.quaternion, pos._x, pos._y, pos._z, scale._x, scale._y, scale._z);\r\n\t\t\t\tmatrix.translate(-pivot._x, -pivot._y, -pivot._z);\r\n\t\t\t\tmatrix.setToMultLegacy(lt, matrix);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.setToMultLegacy(lt, this.cameraMatrix);\r\n\t\t\tmatrix.translate(pivot._x, pivot._y, pivot._z);\r\n\t\t\tmatrix.scale(1.0 / scale._x, 1.0 / scale._y, 1.0 / scale._z);\r\n\t\t\ttempMat.setToRotationTranslationScale(euler.quaternion, 0, 0, 0, 1, 1, 1);\r\n\t\t\tmatrix.setToMult(matrix, tempMat);\r\n\t\t\tmatrix.translate(-pos._x, -pos._y, -pos._z);\r\n\r\n\t\t\tthis.local._dirtyId++;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_projection {\r\n    export class Mesh3d2d extends PIXI.Mesh {\r\n        constructor(geometry: PIXI.Geometry, shader: PIXI.Shader, state: PIXI.State, drawMode?: number)\r\n        {\r\n            super(geometry, shader, state, drawMode);\r\n            this.proj = new Projection3d(this.transform);\r\n        }\r\n\r\n        vertexData2d: Float32Array = null;\r\n        proj: Projection3d;\r\n\r\n        calculateVertices()\r\n        {\r\n            if (this.proj._affine) {\r\n                this.vertexData2d = null;\r\n                super.calculateVertices();\r\n                return;\r\n            }\r\n\r\n            const geometry = this.geometry as any;\r\n            const vertices = geometry.buffers[0].data;\r\n            const thisAny = this as any;\r\n\r\n            if (geometry.vertexDirtyId === thisAny.vertexDirty && thisAny._transformID === thisAny.transform._worldID)\r\n            {\r\n                return;\r\n            }\r\n\r\n            thisAny._transformID = thisAny.transform._worldID;\r\n\r\n            if (thisAny.vertexData.length !== vertices.length)\r\n            {\r\n                thisAny.vertexData = new Float32Array(vertices.length);\r\n            }\r\n\r\n            if (this.vertexData2d.length  !== vertices.length * 3 / 2)\r\n            {\r\n                this.vertexData2d = new Float32Array(vertices.length * 3);\r\n            }\r\n\r\n            const wt = this.proj.world.mat4;\r\n\r\n            const vertexData2d = this.vertexData2d;\r\n            const vertexData = thisAny.vertexData;\r\n\r\n            for (let i = 0; i < vertexData.length / 2; i++)\r\n            {\r\n                const x = vertices[(i * 2)];\r\n                const y = vertices[(i * 2) + 1];\r\n\r\n                const xx = (wt[0] * x) + (wt[4] * y) + wt[12];\r\n                const yy = (wt[1] * x) + (wt[5] * y) + wt[13];\r\n                const ww = (wt[3] * x) + (wt[7] * y) + wt[15];\r\n\r\n                vertexData2d[i * 3] = xx;\r\n                vertexData2d[i * 3 + 1] = yy;\r\n                vertexData2d[i * 3 + 2] = ww;\r\n\r\n                vertexData[(i * 2)] = xx / ww;\r\n                vertexData[(i * 2) + 1] = yy / ww;\r\n            }\r\n\r\n            thisAny.vertexDirty = geometry.vertexDirtyId;\r\n        }\r\n\r\n        get worldTransform() {\r\n            return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n\r\n        toLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n                                       point?: T, skipUpdate?: boolean,\r\n                                       step = TRANSFORM_STEP.ALL): T {\r\n            return container3dToLocal.call(this, position, from, point, skipUpdate, step);\r\n        }\r\n\r\n        isFrontFace(forceUpdate?: boolean) {\r\n            return container3dIsFrontFace.call(this, forceUpdate);\r\n        }\r\n\r\n        getDepth(forceUpdate?: boolean) {\r\n            return container3dGetDepth.call(this, forceUpdate);\r\n        }\r\n\r\n        get position3d(): PIXI.IPoint {\r\n            return this.proj.position;\r\n        }\r\n        get scale3d(): PIXI.IPoint {\r\n            return this.proj.scale;\r\n        }\r\n        get euler(): Euler {\r\n            return this.proj.euler;\r\n        }\r\n        get pivot3d(): PIXI.IPoint {\r\n            return this.proj.pivot;\r\n        }\r\n        set position3d(value: PIXI.IPoint) {\r\n            this.proj.position.copyFrom(value);\r\n        }\r\n        set scale3d(value: PIXI.IPoint) {\r\n            this.proj.scale.copyFrom(value);\r\n        }\r\n        set euler(value: Euler) {\r\n            this.proj.euler.copyFrom(value);\r\n        }\r\n        set pivot3d(value: PIXI.IPoint) {\r\n            this.proj.pivot.copyFrom(value);\r\n        }\r\n    }\r\n\r\n    (Mesh3d2d.prototype as any)._renderDefault = Mesh2d.prototype._renderDefault;\r\n\r\n    export class SimpleMesh3d2d extends Mesh3d2d {\r\n        constructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array,\r\n                    indices?: Uint16Array, drawMode?: number) {\r\n            super(new PIXI.MeshGeometry(vertices, uvs, indices),\r\n                new PIXI.MeshMaterial(texture, {\r\n                    program: PIXI.Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\r\n                    pluginName: 'batch2d'\r\n                }),\r\n                null,\r\n                drawMode);\r\n\r\n            (this.geometry.getBuffer('aVertexPosition') as any).static = false;\r\n        }\r\n\r\n        autoUpdate = true;\r\n\r\n        get vertices()\r\n        {\r\n            return this.geometry.getBuffer('aVertexPosition').data as Float32Array;\r\n        }\r\n        set vertices(value)\r\n        {\r\n            this.geometry.getBuffer('aVertexPosition').data = value;\r\n        }\r\n\r\n        protected _render(renderer?: PIXI.Renderer)\r\n        {\r\n            if (this.autoUpdate)\r\n            {\r\n                this.geometry.getBuffer('aVertexPosition').update();\r\n            }\r\n\r\n            (super._render as any)(renderer);\r\n        }\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    /**\r\n     * Same as Sprite2d, but\r\n     * 1. uses Matrix3d in proj\r\n     * 2. does not render if at least one vertex is behind camera\r\n     */\r\n    export class Sprite3d extends PIXI.Sprite {\r\n        constructor(texture: PIXI.Texture) {\r\n            super(texture);\r\n            this.proj = new Projection3d(this.transform);\r\n            this.pluginName = 'batch2d';\r\n        }\r\n\r\n        vertexData2d: Float32Array = null;\r\n        proj: Projection3d;\r\n        culledByFrustrum = false;\r\n        trimmedCulledByFrustrum = false;\r\n\r\n        calculateVertices() {\r\n            const texture = this._texture;\r\n\r\n            if (this.proj._affine) {\r\n                this.vertexData2d = null;\r\n                super.calculateVertices();\r\n                return;\r\n            }\r\n            if (!this.vertexData2d) {\r\n                this.vertexData2d = new Float32Array(12);\r\n            }\r\n\r\n            const wid = (this.transform as any)._worldID;\r\n            const tuid = (texture as any)._updateID;\r\n            if (this._transformID === wid && this._textureID === tuid) {\r\n                return;\r\n            }\r\n            // update texture UV here, because base texture can be changed without calling `_onTextureUpdate`\r\n            if (this._textureID !== tuid) {\r\n                (this as any).uvs = (texture as any)._uvs.uvsFloat32;\r\n            }\r\n\r\n            this._transformID = wid;\r\n            this._textureID = tuid;\r\n\r\n            const wt = this.proj.world.mat4;\r\n            const vertexData2d = this.vertexData2d;\r\n            const vertexData = this.vertexData;\r\n            const trim = texture.trim;\r\n            const orig = texture.orig;\r\n            const anchor = this._anchor;\r\n\r\n            let w0 = 0;\r\n            let w1 = 0;\r\n            let h0 = 0;\r\n            let h1 = 0;\r\n\r\n            if (trim) {\r\n                w1 = trim.x - (anchor._x * orig.width);\r\n                w0 = w1 + trim.width;\r\n\r\n                h1 = trim.y - (anchor._y * orig.height);\r\n                h0 = h1 + trim.height;\r\n            } else {\r\n                w1 = -anchor._x * orig.width;\r\n                w0 = w1 + orig.width;\r\n\r\n                h1 = -anchor._y * orig.height;\r\n                h0 = h1 + orig.height;\r\n            }\r\n\r\n            let culled = false;\r\n\r\n            let z;\r\n\r\n            vertexData2d[0] = (wt[0] * w1) + (wt[4] * h1) + wt[12];\r\n            vertexData2d[1] = (wt[1] * w1) + (wt[5] * h1) + wt[13];\r\n            z = (wt[2] * w1) + (wt[6] * h1) + wt[14];\r\n            vertexData2d[2] = (wt[3] * w1) + (wt[7] * h1) + wt[15];\r\n            culled = culled || z < 0;\r\n\r\n            vertexData2d[3] = (wt[0] * w0) + (wt[4] * h1) + wt[12];\r\n            vertexData2d[4] = (wt[1] * w0) + (wt[5] * h1) + wt[13];\r\n            z = (wt[2] * w0) + (wt[6] * h1) + wt[14];\r\n            vertexData2d[5] = (wt[3] * w0) + (wt[7] * h1) + wt[15];\r\n            culled = culled || z < 0;\r\n\r\n            vertexData2d[6] = (wt[0] * w0) + (wt[4] * h0) + wt[12];\r\n            vertexData2d[7] = (wt[1] * w0) + (wt[5] * h0) + wt[13];\r\n            z = (wt[2] * w0) + (wt[6] * h0) + wt[14];\r\n            vertexData2d[8] = (wt[3] * w0) + (wt[7] * h0) + wt[15];\r\n            culled = culled || z < 0;\r\n\r\n            vertexData2d[9] = (wt[0] * w1) + (wt[4] * h0) + wt[12];\r\n            vertexData2d[10] = (wt[1] * w1) + (wt[5] * h0) + wt[13];\r\n            z = (wt[2] * w1) + (wt[6] * h0) + wt[14];\r\n            vertexData2d[11] = (wt[3] * w1) + (wt[7] * h0) + wt[15];\r\n            culled = culled || z < 0;\r\n\r\n            this.culledByFrustrum = culled;\r\n\r\n            vertexData[0] = vertexData2d[0] / vertexData2d[2];\r\n            vertexData[1] = vertexData2d[1] / vertexData2d[2];\r\n\r\n            vertexData[2] = vertexData2d[3] / vertexData2d[5];\r\n            vertexData[3] = vertexData2d[4] / vertexData2d[5];\r\n\r\n            vertexData[4] = vertexData2d[6] / vertexData2d[8];\r\n            vertexData[5] = vertexData2d[7] / vertexData2d[8];\r\n\r\n            vertexData[6] = vertexData2d[9] / vertexData2d[11];\r\n            vertexData[7] = vertexData2d[10] / vertexData2d[11];\r\n        }\r\n\r\n        calculateTrimmedVertices() {\r\n            if (this.proj._affine) {\r\n                super.calculateTrimmedVertices();\r\n                return;\r\n            }\r\n\r\n            const wid = (this.transform as any)._worldID;\r\n            const tuid = (this._texture as any)._updateID;\r\n            if (!this.vertexTrimmedData) {\r\n                this.vertexTrimmedData = new Float32Array(8);\r\n            } else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n                return;\r\n            }\r\n\r\n            this._transformTrimmedID = wid;\r\n            this._textureTrimmedID = tuid;\r\n\r\n            // lets do some special trim code!\r\n            const texture = this._texture;\r\n            const vertexData = this.vertexTrimmedData;\r\n            const orig = texture.orig;\r\n            const anchor = this._anchor;\r\n\r\n            // lets calculate the new untrimmed bounds..\r\n            const wt = this.proj.world.mat4;\r\n\r\n            const w1 = -anchor._x * orig.width;\r\n            const w0 = w1 + orig.width;\r\n\r\n            const h1 = -anchor._y * orig.height;\r\n            const h0 = h1 + orig.height;\r\n\r\n            let culled = false;\r\n\r\n            let z;\r\n\r\n            let w = 1.0 / ((wt[3] * w1) + (wt[7] * h1) + wt[15]);\r\n            vertexData[0] = w * ((wt[0] * w1) + (wt[4] * h1) + wt[12]);\r\n            vertexData[1] = w * ((wt[1] * w1) + (wt[5] * h1) + wt[13]);\r\n            z = (wt[2] * w1) + (wt[6] * h1) + wt[14];\r\n            culled = culled || z < 0;\r\n\r\n            w = 1.0 / ((wt[3] * w0) + (wt[7] * h1) + wt[15]);\r\n            vertexData[2] = w * ((wt[0] * w0) + (wt[4] * h1) + wt[12]);\r\n            vertexData[3] = w * ((wt[1] * w0) + (wt[5] * h1) + wt[13]);\r\n            z = (wt[2] * w0) + (wt[6] * h1) + wt[14];\r\n            culled = culled || z < 0;\r\n\r\n            w = 1.0 / ((wt[3] * w0) + (wt[7] * h0) + wt[15]);\r\n            vertexData[4] = w * ((wt[0] * w0) + (wt[4] * h0) + wt[12]);\r\n            vertexData[5] = w * ((wt[1] * w0) + (wt[5] * h0) + wt[13]);\r\n            z = (wt[2] * w0) + (wt[6] * h0) + wt[14];\r\n            culled = culled || z < 0;\r\n\r\n            w = 1.0 / ((wt[3] * w1) + (wt[7] * h0) + wt[15]);\r\n            vertexData[6] = w * ((wt[0] * w1) + (wt[4] * h0) + wt[12]);\r\n            vertexData[7] = w * ((wt[1] * w1) + (wt[5] * h0) + wt[13]);\r\n            z = (wt[2] * w1) + (wt[6] * h0) + wt[14];\r\n            culled = culled || z < 0;\r\n\r\n            this.culledByFrustrum = culled;\r\n        }\r\n\r\n        _calculateBounds() {\r\n            this.calculateVertices();\r\n            if (this.culledByFrustrum) {\r\n                return;\r\n            }\r\n\r\n            const trim = this._texture.trim;\r\n            const orig = this._texture.orig;\r\n            if (!trim || (trim.width === orig.width && trim.height === orig.height))\r\n            {\r\n                // no trim! lets use the usual calculations..\r\n                this._bounds.addQuad(this.vertexData);\r\n                return;\r\n            }\r\n\r\n            this.calculateTrimmedVertices();\r\n            if (!this.trimmedCulledByFrustrum) {\r\n                this._bounds.addQuad(this.vertexTrimmedData as any);\r\n            }\r\n        }\r\n\r\n        _render(renderer: PIXI.Renderer) {\r\n            this.calculateVertices();\r\n\r\n            if (this.culledByFrustrum) {\r\n                return;\r\n            }\r\n\r\n            renderer.batch.setObjectRenderer((renderer as any).plugins[this.pluginName]);\r\n            (renderer as any).plugins[this.pluginName].render(this);\r\n        }\r\n\r\n        containsPoint(point: PIXI.IPoint) {\r\n            if (this.culledByFrustrum) {\r\n                return false;\r\n            }\r\n\r\n            return super.containsPoint(point as any);\r\n        }\r\n\r\n        get worldTransform() {\r\n            return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n\r\n        toLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n                                       point?: T, skipUpdate?: boolean,\r\n                                       step = TRANSFORM_STEP.ALL): T {\r\n            return container3dToLocal.call(this, position, from, point, skipUpdate, step);\r\n        }\r\n\r\n        isFrontFace(forceUpdate?: boolean) {\r\n            return container3dIsFrontFace.call(this, forceUpdate);\r\n        }\r\n\r\n        getDepth(forceUpdate?: boolean) {\r\n            return container3dGetDepth.call(this, forceUpdate);\r\n        }\r\n\r\n        get position3d(): PIXI.IPoint {\r\n            return this.proj.position;\r\n        }\r\n\r\n        get scale3d(): PIXI.IPoint {\r\n            return this.proj.scale;\r\n        }\r\n\r\n        get euler(): Euler {\r\n            return this.proj.euler;\r\n        }\r\n\r\n        get pivot3d(): PIXI.IPoint {\r\n            return this.proj.pivot;\r\n        }\r\n\r\n        set position3d(value: PIXI.IPoint) {\r\n            this.proj.position.copyFrom(value);\r\n        }\r\n\r\n        set scale3d(value: PIXI.IPoint) {\r\n            this.proj.scale.copyFrom(value);\r\n        }\r\n\r\n        set euler(value: Euler) {\r\n            this.proj.euler.copyFrom(value);\r\n        }\r\n\r\n        set pivot3d(value: PIXI.IPoint) {\r\n            this.proj.pivot.copyFrom(value);\r\n        }\r\n    }\r\n}\r\n","namespace pixi_projection {\r\n    export class Text3d extends PIXI.Text {\r\n        constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n            super(text, style, canvas);\r\n            this.proj = new Projection3d(this.transform);\r\n            this.pluginName = 'batch2d';\r\n        }\r\n\r\n        proj: Projection3d;\r\n        vertexData2d: Float32Array = null;\r\n\r\n        get worldTransform() {\r\n\t        return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n        }\r\n\r\n\t    toLocal<T extends PIXI.IPoint>(position: PIXI.IPoint, from?: PIXI.DisplayObject,\r\n\t                                      point?: T, skipUpdate?: boolean,\r\n\t                                      step = TRANSFORM_STEP.ALL): T {\r\n\t\t    return container3dToLocal.call(this, position, from, point, skipUpdate, step);\r\n\t    }\r\n\r\n\t    isFrontFace(forceUpdate?: boolean) {\r\n\t\t    return container3dIsFrontFace.call(this, forceUpdate);\r\n\t    }\r\n\r\n\t    getDepth(forceUpdate?: boolean) {\r\n\t\t    return container3dGetDepth.call(this, forceUpdate);\r\n\t    }\r\n\r\n\t    get position3d(): PIXI.IPoint {\r\n\t\t    return this.proj.position;\r\n\t    }\r\n\t    get scale3d(): PIXI.IPoint {\r\n\t\t    return this.proj.scale;\r\n\t    }\r\n\t    get euler(): IEuler {\r\n\t\t    return this.proj.euler;\r\n\t    }\r\n\t    get pivot3d(): PIXI.IPoint {\r\n\t\t    return this.proj.pivot;\r\n\t    }\r\n\t    set position3d(value: PIXI.IPoint) {\r\n\t\t    this.proj.position.copyFrom(value);\r\n\t    }\r\n\t    set scale3d(value: PIXI.IPoint) {\r\n\t\t    this.proj.scale.copyFrom(value);\r\n\t    }\r\n\t    set euler(value: IEuler) {\r\n\t\t    this.proj.euler.copyFrom(value);\r\n\t    }\r\n\t    set pivot3d(value: PIXI.IPoint) {\r\n\t\t    this.proj.pivot.copyFrom(value);\r\n\t    }\r\n    }\r\n\r\n    Text3d.prototype.calculateVertices = Sprite3d.prototype.calculateVertices;\r\n    (Text3d.prototype as any).calculateTrimmedVertices = Sprite3d.prototype.calculateTrimmedVertices;\r\n\t(Text3d.prototype as any)._calculateBounds = Sprite3d.prototype._calculateBounds;\r\n\t(Text3d.prototype as any).containsPoint = Sprite3d.prototype.containsPoint;\r\n\t(Text3d.prototype as any)._render = Sprite3d.prototype._render;\r\n}\r\n","declare module PIXI {\r\n    interface Container {\r\n        convertTo3d(): void;\r\n        convertSubtreeTo3d(): void;\r\n    }\r\n}\r\n\r\nnamespace pixi_projection {\r\n\r\n\tconst containerProps: any = {\r\n\t\tworldTransform: {\r\n\t\t\tget: container3dWorldTransform,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t},\r\n\t\tposition3d: {\r\n\t\t\tget: function() { return this.proj.position },\r\n\t\t\tset: function(value: any) { this.proj.position.copy(value) }\r\n\t\t},\r\n\t\tscale3d: {\r\n\t\t\tget: function() { return this.proj.scale },\r\n\t\t\tset: function(value: any) { this.proj.scale.copy(value) }\r\n\t\t},\r\n\t\tpivot3d: {\r\n\t\t\tget: function() { return this.proj.pivot },\r\n\t\t\tset: function(value: any) { this.proj.pivot.copy(value) }\r\n\t\t},\r\n\t\teuler: {\r\n\t\t\tget: function() { return this.proj.euler },\r\n\t\t\tset: function(value: any) { this.proj.euler.copy(value) }\r\n\t\t}\r\n\t};\r\n\r\n\tfunction convertTo3d() {\r\n\t\tif (this.proj) return;\r\n\t\tthis.proj = new Projection3d(this.transform);\r\n\t\tthis.toLocal = Container3d.prototype.toLocal;\r\n\t\tthis.isFrontFace = Container3d.prototype.isFrontFace;\r\n\t\tthis.getDepth = Container3d.prototype.getDepth;\r\n\t\tObject.defineProperties(this, containerProps);\r\n\t}\r\n\r\n\t(PIXI as any).Container.prototype.convertTo3d = convertTo3d;\r\n\r\n    (PIXI as any).Sprite.prototype.convertTo3d = function () {\r\n        if (this.proj) return;\r\n        this.calculateVertices = Sprite3d.prototype.calculateVertices;\r\n        this.calculateTrimmedVertices = Sprite3d.prototype.calculateTrimmedVertices;\r\n\t    this._calculateBounds = Sprite3d.prototype._calculateBounds;\r\n\t    this.containsPoint = Sprite3d.prototype.containsPoint;\r\n\t    this.pluginName = 'batch2d';\r\n\t\tconvertTo3d.call(this);\r\n    };\r\n\r\n    (PIXI as any).Container.prototype.convertSubtreeTo3d = function () {\r\n        this.convertTo3d();\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            this.children[i].convertSubtreeTo3d();\r\n        }\r\n    };\r\n\r\n    if (PIXI.SimpleMesh) {\r\n        (PIXI as any).SimpleMesh.prototype.convertTo3d =\r\n            (PIXI as any).SimpleRope.prototype.convertTo3d =\r\n                function () {\r\n                    if (this.proj) return;\r\n                    this.calculateVertices = Mesh3d2d.prototype.calculateVertices;\r\n                    this._renderDefault = (Mesh3d2d.prototype as any)._renderDefault;\r\n                    if (this.material.pluginName !== 'batch2d') {\r\n                        this.material = new PIXI.MeshMaterial(this.material.texture, {\r\n                            program: PIXI.Program.from(Mesh2d.defaultVertexShader, Mesh2d.defaultFragmentShader),\r\n                            pluginName: 'batch2d'\r\n                        });\r\n                    }\r\n                    convertTo3d.call(this);\r\n                };\r\n    }\r\n}\r\n"]}